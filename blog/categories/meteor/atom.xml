<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: meteor | Louis Li]]></title>
  <link href="http://louisrli.github.io/blog/categories/meteor/atom.xml" rel="self"/>
  <link href="http://louisrli.github.io/"/>
  <updated>2020-10-09T20:20:45+01:00</updated>
  <id>http://louisrli.github.io/</id>
  <author>
    <name><![CDATA[Louis Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How To Use Meteor.js Routing with Disqus]]></title>
    <link href="http://louisrli.github.io/blog/2013/07/29/using-meteor-js-with-disqus/"/>
    <updated>2013-07-29 00:00:00 +0100</updated>
    <id>http://louisrli.github.io/blog/2013/07/29/using-meteor-js-with-disqus</id>
    <content type="html"><![CDATA[<p>On most sites, using Disqus as the commenting system is as simple as copying the <a href="http://disqus.com/admin/universalcode/">Universal Code</a> (also known as <code class="language-plaintext highlighter-rouge">embed.js</code>) into a web page. In single-page JavaScript applications, however, much of the rendering is on the client-side. This means that <code class="language-plaintext highlighter-rouge">embed.js</code> might lead to stale Disqus threads or function incorrectly as pages are re-rendered.</p>

<p>This article explains how to integrate Disqus with <a href="http://meteor.com">Meteor.js</a> (version 0.6.4.1 at the time of writing). If you want one Disqus thread for each route, copying the Universal Code won’t ensure that Disqus loads the correct thread for each page. Instead, the comments will either fail to load or retrieve a stale thread.</p>

<p>When <code class="language-plaintext highlighter-rouge">embed.js</code> is loaded multiple times (when pages rerender and run the script multiple times), the following error will appear in the console:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DISQUS assertion failed: Unsafe attempt to redefine existing module &lt;name&gt;
</code></pre></div></div>

<p><em>Note</em>: I’m using <a href="https://github.com/tmeasday/meteor-router">Meteor Router</a> to create URL paths in my application, although this method should work with any routing system.</p>

<!-- more -->

<h2 id="disqus-single-sign-on">Disqus Single Sign-on</h2>
<p>As a bonus, I’ve added the optional code snippet in <code class="language-plaintext highlighter-rouge">Deps.autorun()</code> for using <a href="http://help.disqus.com/customer/portal/articles/236206-integrating-single-sign-on">Disqus Single Sign-on</a> with Meteor. If you want to see the server-side code in JavaScript, take a look at <a href="https://github.com/disqus/DISQUS-API-Recipes/blob/master/sso/javascript/main.js">the examples that I added</a> to the Disqus API Recipes.</p>

<h2 id="annotated-code">Annotated Code</h2>

<p>The code is written in <a href="http://coffeescript.org/">CoffeeScript</a>. If you want to take a look at the JavaScript version, you can use the <a href="http://coffeescript.org/#try:">CoffeeScript translator</a>. Meteor automatically compiles <code class="language-plaintext highlighter-rouge">.coffee</code> files to <code class="language-plaintext highlighter-rouge">.js</code>.</p>

<p>With the code below, all you have to do is add the following to your Meteor Handlebars template to include Disqus comments:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> {{&gt; disqus}} 
</code></pre></div></div>

<p>Easy, right?</p>

<p>Template.disqus.rendered = -&gt;
  ###
  # We don’t want to load Disqus until the first time the template is
  # rendered, since it requires the #disqus_thread div
  # Triggers Deps.autorun (below)
  ###
  Session.set(“loadDisqus”, true)</p>

<p>###
  # OPTIONAL: Only include the part below if you’re using
  # Disqus single-sign on
  # Generate the disqusSignon variable appropriately from your server
  ###
  disqusSignon = Session.get(“disqusSignon”)
  if Meteor.user() and disqusSignon
    window.disqus_config = -&gt;
      this.page.remote_auth_s3 = “#{disqusSignon.auth}”
      this.page.api_key = “#{disqusSignon.pubKey}”
      # … other Disqus configs</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>###
# Whenever the template is rendered, trigger a Disqus reset.
# This will find the correct thread for the current page URL.
# See http://help.disqus.com/customer/portal/articles/472107-using-disqus-on-ajax-sites
###
DISQUS?.reset(
   reload: true
   config: -&gt;
)
</code></pre></div></div>

<p>Deps.autorun(-&gt;
  # Load the Disqus embed.js the first time the <code class="language-plaintext highlighter-rouge">disqus</code> template is rendered
  # but never more than once
  if Session.get(“loadDisqus”) &amp;&amp; !window.DISQUS
    # Below is the Disqus Universal Code
    # (in Coffeescript, backticks escape Javascript code)
    `
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = ‘YOUR_SHORTNAME’; // required: replace example with your forum shortname</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
 var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
 dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
 (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
 })();
 ` )
</code></pre></div></div>

<template name="disqus">
{{#isolate}}
<div id="my-disqus">  
  <!-- Begin Disqus universal code -->
  <div id="disqus_thread"></div> 

  <noscript>Please enable JavaScript to view the 
    <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a>
  </noscript>

  <a href="https://disqus.com" class="dsq-brlink">
    comments powered by <span class="logo-disqus">Disqus</span>
  </a>
  <!-- End Disqus universal code -->
</div>
{{/isolate}}
</template>

<h2 id="disqus-in-other-single-page-javascript-frameworks">Disqus in Other Single-page JavaScript Frameworks</h2>

<p>If you’re using another single-page JavaScript framework like Ember.js, Angular.js, etc., here’s a general strategy for using Disqus:</p>

<ol>
  <li>Wait until the first time a Disqus thread needs to be loaded.<br />
When <code class="language-plaintext highlighter-rouge">div #disqus_thread</code> has been rendered, load <code class="language-plaintext highlighter-rouge">embed.js</code> into the page.</li>
  <li>Set a global flag to ensure that <code class="language-plaintext highlighter-rouge">embed.js</code> is not loaded again.</li>
  <li>Each time a new Disqus thread is needed, trigger a <code class="language-plaintext highlighter-rouge">DISQUS.reset()</code>, including
the first time <code class="language-plaintext highlighter-rouge">embed.js</code> is loaded. Again,
make sure that <code class="language-plaintext highlighter-rouge">div #disqus_thread</code> is rendered in the DOM, or there may be an error
about appending an element to <code class="language-plaintext highlighter-rouge">null</code>.</li>
</ol>

]]></content>
  </entry>
  
</feed>
