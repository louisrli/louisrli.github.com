<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Louis Li]]></title>
  <link href="http://louisrli.github.io/atom.xml" rel="self"/>
  <link href="http://louisrli.github.io/"/>
  <updated>2015-09-01T22:05:30+02:00</updated>
  <id>http://louisrli.github.io/</id>
  <author>
    <name><![CDATA[Louis Li]]></name>
    <email><![CDATA[louisrli@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Transportation from Tirana to Durres / Schkoder (Albania)]]></title>
    <link href="http://louisrli.github.io/blog/2015/08/31/tirana-durres-schkoder-albania/"/>
    <updated>2015-08-31T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2015/08/31/tirana-durres-schkoder-albania</id>
    <content type="html"><![CDATA[<p>This article contains bus directions based on my travels in Albania in August 2015. 
Durres is a coastal city around thirty minutes away, containing
ferries to Italy and beaches. </p>

<p>Schkoder is a historical city around 1.25 to 1.75 hours away,
depending on traffic. It is a northern border city with bus transfers to Ulcinj, Montenegro. </p>

<!-- more -->

<p>Confirm these
directions. Two years ago, the bus to Schkoder was at a different location, and some of the
directions that I found were outdated.</p>

<h2 id="directions-to-the-bus-stop">Directions to the bus stop</h2>

<p>The Google Maps diagram below shows the bus stop, which is in the roundabout of Karl Topia Square.
It shouldn’t be too hard to find the correct bus: each bus has a person shouting its destination.  </p>

<div style="text-align: center;">
<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2995.868120776664!2d19.804230999999994!3d41.333481!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNDHCsDIwJzAwLjUiTiAxOcKwNDgnMTUuMiJF!5e0!3m2!1sen!2sus!4v1441137271939" width="400" height="300" frameborder="0" style="border:0" allowfullscreen=""></iframe>
</div>

<h2 id="bus">Bus</h2>

<p>The buses, known as <em>furgons</em>, are more akin to vans or cars. For an afternoon bus to Durres, I took
a van that fit approximately 15 people. For a 7 AM bus to Schkoder, the vehicle was someone’s
five-seat Volkswagen. Don’t be worried if it just seems like you’re getting in someone’s car (you
are).</p>

<p>The buses don’t leave until they are full or almost full. For Durres, this seems to be approximately
every thirty minutes. For Schkoder, this seems to be approximately every hour. </p>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/tiranabus/bus.jpg" alt="Vans that will take you through beautiful Albania" /></p>

<h2 id="fare">Fare</h2>

<p>In August 2015, the fare for each direction was:</p>

<ul>
  <li>150 lek to Durres</li>
  <li>500 lek to Schkoder</li>
</ul>

<p>The drivers take euro. If you want to get rid of some remaining lek, they also take euro-lek mix.</p>

<p>Enjoy the Albanian music on the drive!</p>

<p><em>Last updated: August 2015</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Transportation to Mount Dajti (Tirana, Albania)]]></title>
    <link href="http://louisrli.github.io/blog/2015/08/30/mt-dajt-tirana-albania/"/>
    <updated>2015-08-30T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2015/08/30/mt-dajt-tirana-albania</id>
    <content type="html"><![CDATA[<p><a href="http://www.tripadvisor.com/Attraction_Review-g294446-d606455-Reviews-Mount_Dajti-Tirana.html">Mount
Dajti</a> is a mountain near Tirana, the capital of Albania. It is a popular picnic
and hiking spot. This article includes directions and information from Tirana
city center to Mount Dajti.</p>

<!-- more -->

<h2 id="directions-to-the-cable-car-station">Directions to the cable car station</h2>
<p>The <a href="www.dajtiekspres.com/">Dajti Express</a> cable car is the preferred method of going up. The site does not say its hours of operation, but as of August 2015 it
operates from 9:00 - 22:00. </p>

<p>The cable car station is about 5 km from Skanderbeg Square, the city center. </p>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/dajti/view.jpg" alt="View from the cable car, scratched glass and all" /></p>

<h3 id="by-public-bus">By public bus</h3>
<p>The bus waits outside the clock tower near Skanderbeg Square, dropping you off a short, uphill walk from the
cable car station. The bus should say Porcelani on it. It
costs about 100 lek. </p>

<h3 id="by-dajti-express-van">By Dajti Express van</h3>

<p>I couldn’t find information about this on the internet (I suspect nothing has been updated), but on my return trip, there was a <strong>free
van</strong> that
stopped directly at the cable car station at the base of the mountain. </p>

<p>The Google Maps link below shows where it dropped me off outside the cafes near Skanderbeg Square, which is likely where it picks up for a free trip to the cable car
station. If you don’t mind waiting, then you can wait there for a potential free trip by looking for
the van pictured below (and let me know if you’re successful!).  People in Tirana are also very
friendly, and it doesn’t hurt to ask around.</p>

<div style="text-align:center;">
<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2996.102796304338!2d19.818874999999995!3d41.328378!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNDHCsDE5JzQyLjIiTiAxOcKwNDknMDguMCJF!5e0!3m2!1sen!2sus!4v1440968571219" width="400" height="300" frameborder="0" style="border:0" allowfullscreen=""></iframe>
</div>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/dajti/van.jpg" alt="The mystery van operated by Dajti Express" /></p>

<h3 id="by-foot-or-bike">By foot or bike</h3>
<p>Since the station is 5 km away from Skanderbeg, running or biking to the station are viable options.</p>

<p>There is some information on the internet about hiking trails from the base of the mountain to the
summit, but I’m not familiar with these routes.</p>

<h2 id="trail-map">Trail Map</h2>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/dajti/trails.jpg" alt="Trail map" /></p>

<p>I didn’t find this map very useful, and online reviews say that the trails are not well marked (I
had this impression as well, though I didn’t actually end up hiking – I crashed an Albanian Sunday
barbecue instead).</p>

<p><em>Last updated: August 2015</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Best Meat and Rice in Taipei: Barbecue Pork Rice 御狀元烤肉飯 (Taipei, Taiwan)]]></title>
    <link href="http://louisrli.github.io/blog/2015/08/17/meat-and-rice-zhaopaikaoroufan/"/>
    <updated>2015-08-17T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2015/08/17/meat-and-rice-zhaopaikaoroufan</id>
    <content type="html"><![CDATA[<p>御狀元烤肉飯 (<em>yu zhuang yuan kao rou fan</em>) (“Emperor’s Best Barbecue Pork and Rice” – not sure if
that’s the correct translation) is a meat and rice joint in Taipei near Taipei Main Station.</p>

<p>This was my favorite place to eat in Taiwan. I worked near Taipei Main Station and would eat here
three to four days a week – for lunch <em>and</em> dinner on some days. It’s extremely cheap and very
tasty for meat and rice (and egg and vegetable) lovers.</p>

<p>I have a <a href="https://www.youtube.com/playlist?list=PLtD-FIua473Cf6Ylh3PeoEmoq3c6BJH0S">travel-related YouTube
channel</a> on life in Taiwan.
Subscribe!</p>

<!-- more -->

<h2 id="signature-dish">Signature Dish</h2>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/zpkrf/signature.jpg" alt="Signature dish: barbecue pork rice (zhao pai kao rou fan)" /></p>

<p>For 79 NT (less than 3 USD), the barbecue pork rice contains:</p>

<ul>
  <li>rice</li>
  <li>fried egg</li>
  <li>garlic cabbage</li>
  <li>pickled vegetables</li>
  <li>barbecue pork</li>
  <li>yummy sauce</li>
</ul>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/zpkrf/with-chicken.jpg" alt="Barbecue pork rice with fried chicken" /></p>

<p>For an extra 6 NT (around 20 cents USD), they will add fried chicken cutlet.</p>

<h2 id="directions">Directions</h2>

<p>The closest subway exit is Taipei Main Station exit M6 (Caesar Park Hotel). The store is located on
Xuchang Street past the Paris Shop.</p>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/zpkrf/signpost.jpg" alt="This sign hangs near the entrance" /></p>

<p>It may be helpful to see the <a href="https://goo.gl/maps/uceKr">Google Maps street view</a>.</p>

<div style="text-align: center;">
<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.6629865749737!2d121.51611240000001!3d25.045508700000003!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442a9731d0f5025%3A0x8ee7ca88ac8492f9!2sXuchang+St%2C+Zhongzheng+District%2C+Taipei+City%2C+Taiwan+100!5e0!3m2!1sen!2s!4v1440960795318" width="400" height="300" frameborder="0" style="border:0;" allowfullscreen=""></iframe>
</div>

<h2 id="menu">Menu</h2>

<p class="minipic"><img src="http://louisrli.github.io/images/travel/zpkrf/menu.jpg" alt="Menu" /></p>

<h3 id="translation">Translation</h3>

<ol>
  <li>Frog rice (<em>pen shui ji rou fan</em>)</li>
  <li>Pickled vegetables chicken rice (<em>pao cai ji rou fan</em>)</li>
  <li>Soy sauce chicken leg rice (<em>jiang lu ji tui fan</em>) </li>
  <li>Ka la (cracking?) chicken cutlet rice (<em>ka la ji pai fan</em>)</li>
  <li>Osaka pork cutlet rice (<em>da ban zhu pai fan</em>)</li>
  <li>Thai chicken cutlet rice (<em>tai shi ji pai fan</em>)</li>
  <li>Thai pork cutlet rice (<em>tai shi zhu pai fan</em>)</li>
  <li><strong>Barbecue pork rice (signature dish)</strong> (<em>zhao pai kao rou fan</em>)</li>
  <li>Pickled vegetables barbecue pork rice (<em>pao cai kao rou fan</em>)</li>
  <li>Combo chicken and pork rice (<em>shuang pin kao rou fan</em>)</li>
</ol>

<p>I’ve only had the barbecue pork and the combo (but I’ve tried it many times).</p>

<p>I have a <a href="https://www.youtube.com/playlist?list=PLtD-FIua473Cf6Ylh3PeoEmoq3c6BJH0S">travel-related YouTube
channel</a> on life in Taiwan.
Subscribe!</p>

<p><em>Last updated: August 2015</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yangmingshan Transportation 阳明山 (Taipei, Taiwan)]]></title>
    <link href="http://louisrli.github.io/blog/2015/08/11/yangmingshan/"/>
    <updated>2015-08-11T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2015/08/11/yangmingshan</id>
    <content type="html"><![CDATA[<p>This is an English guide for transportation to <a href="http://en.wikipedia.org/wiki/Yangmingshan">Yangmingshan
(阳明山)</a>, a national park north of Taipei, Taiwan. 
Yangmingshan is a popular destination for locals and tourists, containing numerous hiking trails and
hot springs.</p>

<p>I have a <a href="https://www.youtube.com/playlist?list=PLtD-FIua473Cf6Ylh3PeoEmoq3c6BJH0S">travel-related YouTube
channel</a> on life in Taiwan.
Subscribe!</p>

<!-- more -->

<h2 id="travel-to-yangmingshan">Travel to Yangmingshan</h2>

<p>The easiest way to reach Yangmingshan is by taking the <strong>260 bus from Taipei Main Station</strong>
to the very last stop. <strong>The bus stops outside exit M1.</strong> The second-to-last stop also contains the phrase “Yangmingshan” – make
sure to get off at the final stop.</p>

<p>The 260 bus also runs along North Zhongshan Road (中山北路). It may be more convenient to find a 260
bus stop along this road rather than going to Taipei Main Station.</p>

<p><strong>The fare is about 30 NTD</strong>. If using an Easy Card, swipe the card when going both on and off the bus.</p>

<h2 id="travel-within-yangmingshan">Travel within Yangmingshan</h2>

<p>The internal 108 bus runs on stops within Yangmingshan. This small bus makes stops around the whole
park.</p>

<p>I have a <a href="https://www.youtube.com/playlist?list=PLtD-FIua473Cf6Ylh3PeoEmoq3c6BJH0S">travel-related YouTube
channel</a> on life in Taiwan.
Subscribe!</p>

<p><em>Last updated: August 2015</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[English Guide to Sun Moon Lake 日月潭 (Taiwan)]]></title>
    <link href="http://louisrli.github.io/blog/2015/07/10/sun-moon-lake/"/>
    <updated>2015-07-10T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2015/07/10/sun-moon-lake</id>
    <content type="html"><![CDATA[<p>This is a guide to transportation, food, activities, and lodging for a Sun Moon Lake trip, based on
my own experiences. My friend and I traveled from Taipei to Sun Moon Lake in July 2015, staying one
night by the lake. </p>

<p>I have a <a href="https://www.youtube.com/playlist?list=PLtD-FIua473Cf6Ylh3PeoEmoq3c6BJH0S">travel-related YouTube
channel</a> on life in Taiwan.
Subscribe!</p>

<!-- more -->

<h2 id="traveling-to-sun-moon-lake">Traveling to Sun Moon Lake</h2>

<h3 id="from-taichung">From Taichung</h3>

<p>We traveled from Taichung (台中), since we wanted to explore the city the night before.
Taipei to Taichung is one hour by high speed rail (HSR), two hours by train (TRA), four hours by
bus.</p>

<p>We purchased a package deal for Sun Moon Lake from Nantou Bus Company across from Gancheng station,
which is near the train station. Packages can also be purchased from the Taichung HSR station.</p>

<p>There are <a href="http://www.ntbus.com.tw/en-p-1.html">many options for packages</a>, but the 570 NT package
includes:</p>

<ul>
  <li>Round trip bus tickets between Taichung and Sun Moon Lake (383 NT)</li>
  <li>Ferry rides for one day (200 NT)</li>
  <li>Bike rental for two hours from Merida Bikes or one hour from GIANT (200 NT)</li>
  <li>Round trip bus tickets between Shuishe and Xiangshan, two stops at Sun Moon Lake (48 NT)</li>
</ul>

<p>According to my computationally intense calculations, this <strong>saves you 261 NT.</strong> It’s a good deal.</p>

<p><strong>Duration:</strong> 1.5 hours<br />
<strong>Price:</strong> 570 NT for package deal (see <a href="http://www.ntbus.com.tw/en-p-1.html">Nantou site</a> for other
options)<br />
<strong>Location:</strong> Across from Gancheng station (sells packages), Taichung HSR station (sells packages),
or Taichung TRA station. It stops at Shuishe Pier, the main hub of Sun Moon Lake.  </p>

<h2 id="from-taipei">From Taipei</h2>
<p>I didn’t travel from Taipei, but the <a href="http://www.sunmoonlake.gov.tw/English/TravelInfoEng/BusInfo/TaipeiToSML.htm">King Bus
timetable</a> lists bus
times from Taipei Main Station.  </p>

<p><strong>Type:</strong> Bus<br />
<strong>Duration:</strong> 4 hours<br />
<strong>Price:</strong> 460 NT each way<br />
<strong>Location:</strong> Taipei Bus Station</p>

<p>Miscellaneous: We stayed at a nice and cheap hotel in Taichung, the <a href="https://www.kayak.com/Taichung-Hotels-Moon-Lake-Hotel.2070096.ksp">Moon Lake
Hotel</a> (11 USD per
night). It is less than a kilometer away from the train station.</p>

<p><strong>Type:</strong> Bus  </p>

<h2 id="getting-around">Getting Around</h2>

<h3 id="ferry">Ferry</h3>

<p>The ferry is the most convenient way to cover a lot of ground and hit the main destinations. It has three stops, forming a triangle along the lake. </p>

<ul>
  <li>The first pier is <strong>Shuishe</strong>, the main pier. </li>
  <li>The second pier is <strong>Xuanzang Pier</strong>, and it has a legendary tea egg store that has been run by the same
woman for about fifty years (13 NT per egg). </li>
  <li>The last pier is <strong>Ita Thao</strong>, which has many food stands.</li>
</ul>

<h3 id="bike">Bike</h3>

<p>Biking is a scenic way to get around the lake. Details on bike shops can be found
<a href="http://www.sunmoonlake.gov.tw/English/TravelInfoEng/LakeTour/BikeRental.htm">here</a>. See the <strong>Activities</strong> section for more information
about the bikes in the package deal.</p>

<h3 id="bus">Bus</h3>

<p>The Round-the-Lake bus, which goes ‘round the lake, is the main bus. A trip on the bus is more or less 20 NT. An unlimited trip ticket is 80 NT. You can use your EasyCard.</p>

<p><strong>Advice:</strong> Wave down the bus drivers as they approach, because they probably won’t stop for you
otherwise.</p>

<h2 id="things-to-try">Things To Try</h2>

<h3 id="food">Food</h3>

<p>Ita Thao has all the good food. Edibles to try:</p>

<ul>
  <li><strong>Pork buns (Ita Thao):</strong> I recommend the stand that has pumpkin pork buns.</li>
  <li><strong>Assam tea (Ita Thao):</strong> Stands advertising Assam tea are everywhere. It’s a type of tea imported
  from India or Japan. It tastes like tea. For some reason (I don’t know because I’m Chinese
  illiterate), it’s famous in the area.</li>
  <li><strong>Chicken stuffed with rice (Ita Thao):</strong> I have no idea what this is called. Look for a stand with deer horns.
  Also, if you don’t like spicy, ask for “no spicy” because even “small spicy” was super spicy.</li>
  <li><strong>Old woman tea eggs (Xuanguan Pier):</strong> These were mentioned above. They’re at the first ferry stop after Shuishe.</li>
</ul>

<h3 id="places">Places</h3>

<p>There are many destinations at Sun Moon Lake, but I recommend:</p>

<ul>
  <li>
    <p><strong>Ci’en Pagoda</strong>, a tall building commissioned by Chiang-Kai Shek, has a sweeping view of the lake. 
Sun Moon Lake has hiking trails, but many of them don’t have a nice view of the lake. 
To reach the pagoda, take the round-the-lake bus. Although Ci’en Pagoda is not listed as a stop, it <strong>is</strong>
the second-to-last stop before (I think) Xuanzang Temple. </p>
  </li>
  <li>
    <p><strong>Ita Thao</strong>, an area with many food stands. Because food.</p>
  </li>
</ul>

<p><strong>Advice:</strong> The bus does not stop at Ci’en Pagoda between 1 and 3 PM, and none of the main
piers are within short walking distance (around 5 km). We tried leaving at 1:30 PM.  Not wanting to
wait around for 1.5 hours, we hitchhiked our way back.</p>

<p><strong>Advice:</strong> Bug your bus driver to stop. Our bus driver was not-too-nice and chose not to stop Ci’en
Pagoda– despite knowing that it was
our destination. You might notice a pattern here involving interactions with bus drivers.</p>

<h3 id="activities">Activities</h3>

<ul>
  <li><strong>Walking</strong>: Self explanatory.</li>
  <li><strong>Biking</strong>: The best activity by far. The package that we did gave us bikes for two hours from Merida Bike, which was enough time to bike
about a third of the lake (going out and coming back to the bike rental shop). Renting bikes for
longer (i.e., to go around the whole lake) costs more, but I’m unsure how much more. Bike shops want bikes back by around 6:30 PM.</li>
  <li><strong>Cable car:</strong> It exists, but I didn’t do it.</li>
  <li><strong>Being ignored by bus drivers:</strong> It exists, and I did do it.</li>
</ul>

<h3 id="miscellaneous">Miscellaneous</h3>

<p>None of these were that interesting to us, but if you have more time, this is an incomplete list of
other activities in the area:</p>

<ul>
  <li><strong>Aboriginal Culture Village (<a href="http://www.nine.com.tw/webe/html/information/">link</a>):</strong> This sounds like a village for cultural edification, but it turns
  out it’s actually an amusement park.</li>
  <li><strong>Puli:</strong> It’s a town.</li>
  <li><strong>Cingjing Farm (<a href="http://www.cingjing.gov.tw/en/about/">link</a>):</strong> It’s a farm. It’s about 40 minutes from Sun Moon Lake.</li>
</ul>

<h2 id="lodging">Lodging</h2>

<p>Because Sun Moon Lake is a popular tourist destination, lodging is relatively expensive. </p>

<p>Super secret hacker budget stay: <strong>Naluisland House</strong>. This place is so secret that it doesn’t show up
on <a href="http://kayak.com">Kayak</a> or have reviews on
<a href="http://www.tripadvisor.com/Hotel_Review-g304160-d6453391-Reviews-Naluisland_House-Nantou.html">TripAdvisor</a>. 
You can book through Agoda or Ctrip.</p>

<p>We shared a room with two queen sized beds between four people, and it came out to about <strong>450 NT
per person</strong> (15
USD in July 2015). Our room was sufficient for a one night stay. There are rooms with four beds for
a little more. Some rooms also have private bathrooms, which costs a little more as well. </p>

<p>To get to Naluisland House, take the ferry or bus to Ita Thao, which is one of the major destinations of Sun Moon
Lake. However, buses and ferries close around 5:30 PM – be very careful to get to Ita Thao before
then. We learned that a taxi from Shuishe, the main port, costs about 500 NT (try negotiating).</p>

<p>I’m not sure if the owner speaks English, but she was very helpful. </p>

<p>I have a <a href="https://www.youtube.com/playlist?list=PLtD-FIua473Cf6Ylh3PeoEmoq3c6BJH0S">travel-related YouTube
channel</a> on life in Taiwan.
Subscribe!</p>

<p><em>Last updated: July 2015</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Senior Thesis: Security Analysis of Java Web Applications Using String Constraint Analysis]]></title>
    <link href="http://louisrli.github.io/blog/2015/05/03/senior-thesis/"/>
    <updated>2015-05-03T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2015/05/03/senior-thesis</id>
    <content type="html"><![CDATA[<p>I submitted my undergraduate thesis at the beginning of April, titled “Security Analysis of Java Web
Applications Using String Constraint Analysis.” I was advised by Professor Stephen Chong.</p>

<!-- more -->

<p>Here’s the abstract:</p>

<blockquote>

  <p>Web applications are exposed to myriad security vulnerabilities related to malicious user string
input. In order to detect such vulnerabilities in Java web applications, this project employs string
constraint analysis, which approximates the values that a string variable in a program can take on.
In string constraint analysis, program analysis generates string constraints – assertions about the
relationships between string variables. We design and implement a dataflow analysis for Java
programs that generates string constraints and passes those constraints to the CVC4 SMT solver to
find a satisfying assignment of string variables. Using example programs, we illustrate the
feasibility of the system in detecting certain types of web application vulnerabilities, such as SQL
injection and cross-site scripting.</p>
</blockquote>

<p><a href="http://louisrli.github.io/downloads/louisli-thesis.pdf">Download the PDF</a> or view it below. </p>

<embed src="http://louisrli.github.io/downloads/louisli-thesis.pdf" type="application/pdf" width="100%" height="600" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Being a Better Teaching Assistant: Five Concrete Tips]]></title>
    <link href="http://louisrli.github.io/blog/2015/01/28/five-tips-for-being-an-effective-teaching-fellow/"/>
    <updated>2015-01-28T05:13:28+01:00</updated>
    <id>http://louisrli.github.io/blog/2015/01/28/five-tips-for-being-an-effective-teaching-fellow</id>
    <content type="html"><![CDATA[<p>The purpose of this post is to provide concrete pointers to becoming a better undergraduate teaching
fellow (Harvard lingo for student instructor, course assistant, etc.). </p>

<p>Being an undergraduate instructor can be tricky. First, the students are the same age as you. Second, it can be hard to know how to improve. In my experience as both a student writing feedback and an instructor receiving feedback, students usually won’t write more than two sentences of feedback. </p>

<p>The word “teaching” usually evokes an image of an instructor at a whiteboard. While effective
communication skills are important, the environment and perceptions that an instructor
fosters among students is equally important. For that reason, I’m choosing to focus on aspects outside of
teaching classroom material. </p>

<!-- more -->

<h2 id="disclaimer">Disclaimer</h2>

<p>I’m still an undergraduate with a fraction of the teaching experience of a
professor – but the advantage of youth is that I can still remember the most basic and glaring
mistakes that student instructors make. </p>

<p>These tips are derived from three sources:</p>

<ol>
  <li>My own mistakes as a teaching fellow</li>
  <li>My own experience as a student</li>
  <li>My observations of other student instructors</li>
</ol>

<h1 id="explicitly-emphasize-your-accessibility">1. Explicitly emphasize your accessibility.</h1>
<p><strong>Concrete action</strong>: At the beginning of every section (or every section for the first half of the
semester), tell the students to email you any questions that they have about the course or problem
sets – no matter how trivial.</p>

<p><strong>Phrasing is important.</strong> As an instructor, I particularly emphasized my willingness to look at the
rigor of proofs,
a common concern in introductory mathematics courses – telling students that I would avoid saying
whether their answer was correct but would instead give feedback on the rigor of their proofs.</p>

<p>Consider the result of being passively open to questions. In the back of their heads, students
know that they <em>can</em> approach you for questions, but they may be worried about looking “dumb” or
coming off as annoying. Explicitly emphasizing your accessibility fosters an environment that allows
you to help struggling students.</p>

<h1 id="avoid-saying-that-things-are-easy">2. Avoid saying that things are easy.</h1>
<p><strong>Concrete action</strong>: Try to catch yourself before using any of these phrases or their variants:
“this problem is easy”, “this problem is really simple”, “this is not too hard”, etc.</p>

<p>Here’s a real story (identifying details omitted). A student in a course (that I was teaching) told
me that another instructor thought that the course was easy when the
instructor, who had a strong mathematics background, had taken it. The student, who was struggling
in the course, was clearly bothered by this.</p>

<p>Ultimately, telling a student that the course was “supposed to be” easy
achieved nothing positive. It only served to foster the student’s apprehension about the course.</p>

<p>Many people would find it obvious that an instructor shouldn’t tell a struggling student that a task
is easy. However, note that it’s also a bad <em>preface</em> to an example problem – before anybody
mentions confusion. Deeming the problem “easy” beforehand will make potentially confused
students feel worse.</p>

<h1 id="admit-when-you-dont-know-the-answer----then-find-it">3. Admit when you don’t know the answer – then find it.</h1>
<p><strong>Concrete action</strong>: If a student puts you on the spot with a question, and you can’t figure out the
answer, admit it, but <em>make sure</em> to follow up with the student later.</p>

<p>An appropriate response – one I’ve used many times – is along the lines of: “I’m sorry, I don’t
know off the top of my head. I’ll find out and send you an email.” (Of course, you should always first <em>try</em> to answer the question) </p>

<p>Most of the time, the student doesn’t urgently need the answer. As much as it might ring the ego,
it’s better to send the student a well thought-out answer than stalling (wasting everyone’s time) or
giving a copout answer (hurting the student’s learning). </p>

<h1 id="dont-rely-on-the-solutions-key">4. Don’t rely on the solutions key.</h1>
<p><strong>Concrete action</strong>: Fully solve any solution that you’re responsible for explaining
(example problem in section, homework problem, etc.). </p>

<p>In my experience, failing to do this will, with nontrivial probability, result in trying to parse
the solutions under high pressure. <strong>Having the solutions key is not the same as having the
ability to explain the steps of a solution</strong> (I know of a few other instructors that were capable of
procuring explanations quickly – I am not one of them). Working through the solutions beforehand
ensures that you can maximize your helpfulness to students.</p>

<h1 id="follow-the-course-materials-with-the-students">5. Follow the course materials with the students.</h1>
<p><strong>Concrete action</strong>: Read any potential source of questions – textbook
chapters, slides, notes – in step with the timeline of the course.</p>

<p>Familiarize yourself with the students’ readings. Even if you know the course concepts, students often have fairly specific
questions about certain examples in the readings. The ideal response is to explain
an example after rereading it once, having already reviewed the students’
readings. </p>

<p>The wrong response to a question – which, I guiltily admit, has happened to me on occasion –
is to ask the student to wait, spending substantially longer to read, parse, and understand the
example in question. </p>

<h1 id="conclusion">Conclusion</h1>
<p>A good way to improve as an instructor is to consider the qualities that you appreciate in
instructors (or more saliently, the qualities that you dislike).</p>

<p>If you haven’t considered teaching as an undergraduate, I strongly encourage you to think about it. Teaching as an
undergrad is a unique (and sometimes
<a href="http://harvardpolitics.com/harvard/harvard-undergraduates-teaching-harvard-doesnt-want-talk/">controversial</a>)
opportunity.</p>

<p><em>Thank you to Ruth Fong for contributing to this article.</em></p>

<p><em>Thank you to Paul Bamberg, Stephen Chong, Harry Lewis, Emily Riehl, and Salil Vadhan for providing me valuable
opportunities to teach during my college years. I am especially indebted to Paul for propelling me into
teaching as an undergraduate.</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Topological Proof of Bolzano-Weierstrass Without Constructing Sequences]]></title>
    <link href="http://louisrli.github.io/blog/2014/11/07/bolzano-weierstrass-without-sequences/"/>
    <updated>2014-11-07T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2014/11/07/bolzano-weierstrass-without-sequences</id>
    <content type="html"><![CDATA[<p>The <a href="http://en.wikipedia.org/wiki/Bolzano%E2%80%93Weierstrass_theorem">Bolzano-Weierstrass theorem</a>
is a common theorem taught in introductory real analysis and topology courses. </p>

<p>All of the proofs that I’ve read for the Bolzano-Weierstrass theorem involve constructing sequences.
In my introductory topology course, I wanted to see if I could write a simple proof of the theorem
<em>without</em> having to explicitly construct any sequences.</p>

<p>(It’s worth noting that the proof for compact <script type="math/tex">\implies</script> sequentially compact requires constructing
sequences. If we take this as given, then we get to avoid sequences.)</p>

<h2 id="theorem-bolzano-weierstrass">Theorem (Bolzano-Weierstrass)</h2>
<blockquote>
  <p>Any bounded sequence in <script type="math/tex">\mathbb{R}^n</script> has a convergent subsequence.</p>
</blockquote>

<!-- more -->

<h2 id="proof">Proof</h2>

<p>We will make use of the following propositions, which I will assume to be previously proved. The
proofs of these are in a standard topology textbook (I’m reading from Munkres, 2nd edition). </p>

<p>I’ll redefine various notions of compactness below, since there exists some ambiguity in the
different forms of compactness.</p>

<blockquote>
  <p><strong>Definition.</strong> A topological space is <strong>sequentially compact</strong> if every
infinite sequence has a convergent subsequence.</p>
</blockquote>

<blockquote>
  <p><strong>Proposition 1.</strong> The interval <script type="math/tex"> [a, b] \subset \mathbb{R} </script> is compact.</p>
</blockquote>

<blockquote>
  <p><strong>Proposition 2.</strong> The product of compact spaces is compact.</p>
</blockquote>

<p>In fact, this proposition true in both the infinite case (<a href="http://en.wikipedia.org/wiki/Tychonoff's_theorem">Tychonoff’s
theorem</a>) and the finite case.</p>

<blockquote>
  <p><strong>Proposition 3.</strong> (Munkres, Theorem 28.2) <script type="math/tex"> X </script> is compact <script type="math/tex"> \implies </script> <script type="math/tex"> X </script> is
sequentially compact.</p>
</blockquote>

<p>We now prove Bolzano-Weierstrass.</p>

<p>Let <script type="math/tex"> \{ x_i \} </script> be a bounded sequence in <script type="math/tex"> \mathbb{R}^n </script>. We need to show that <script type="math/tex"> \{ x_i \}
</script> has a convergent subsequence.</p>

<p>Since the sequence is bounded in <script type="math/tex"> \mathbb{R}^n </script>, by definition of bounded, every element of
the sequence is contained in some closed interval of <script type="math/tex"> \mathbb{R}^n </script>:</p>

<script type="math/tex; mode=display"> A = [m, M]^n </script>

<p>where <script type="math/tex"> m, M </script> denote the “minimum” and “maximum” of our bounded interval. </p>

<p>Note that <script type="math/tex">[m, M] </script> is compact (Proposition 1). </p>

<p>It follows that <script type="math/tex"> A </script> is compact – it is the product of compact spaces (Proposition 2). </p>

<p>Because <script type="math/tex"> A </script> is compact, <script type="math/tex"> A </script> is sequentially compact (Proposition 3). </p>

<p>In a sequentially compact space, any sequence of points has a convergent subsequence. Note that <script type="math/tex">
\{ x_i \} </script> is one such sequence contained in the sequentially compact space <script type="math/tex"> A </script>, and it
follows that <script type="math/tex"> \{ x_i \} </script> must have a convergent subsequence.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[det(-A) = -det(A) for Odd Square Matrix]]></title>
    <link href="http://louisrli.github.io/blog/2014/11/06/negative-determinant-odd-even-matrix/"/>
    <updated>2014-11-06T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2014/11/06/negative-determinant-odd-even-matrix</id>
    <content type="html"><![CDATA[<p>The proof for this is straightforward, but I didn’t find it explicitly stated elsewhere on the web
– it may just be one of those propositions that’s hard to phrase as a search query. In words:
the negative determinant of an odd square matrix is the determinant of the negative matrix.</p>

<h2 id="proposition">Proposition</h2>
<blockquote>
  <p>If <script type="math/tex">A</script> is an <script type="math/tex"> n \times n </script> square matrix and <script type="math/tex"> n </script> is odd, then <script type="math/tex"> \det(-A) =
-\det(A) </script>.</p>
</blockquote>

<!-- more -->

<h2 id="proof">Proof</h2>

<p>Negating all elements of a row of the matrix <script type="math/tex">A</script> negates the determinant of the matrix
(<a href="https://proofwiki.org/wiki/Effect_of_Sequence_of_Elementary_Row_Operations_on_Determinant">proof</a>
– think about it as multiplying a row by the scalar <script type="math/tex">-1</script>). </p>

<p><script type="math/tex">-A</script> is equivalent to <script type="math/tex"> A </script> with each of its rows negated. Because <script type="math/tex"> n </script> is
odd:</p>

<script type="math/tex; mode=display"> \det(-A) = (-1)^n \det(A) = -\det(A) </script>

<h2 id="context">Context</h2>
<p>This fact was needed to prove that if <script type="math/tex"> A </script> is a <a href="http://en.wikipedia.org/wiki/Orthogonal_group">special orthogonal
matrix</a> and <script type="math/tex"> n </script>
is odd, then <script type="math/tex"> A </script> has at least one eigenvector with eigenvalue <script type="math/tex"> 1 </script>.</p>

<p>Note that if <script type="math/tex">n</script> is even, we can prove that <script type="math/tex">\det(A) = \det(-A)</script> using the same technique.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips for Computer Science Internship Interviews]]></title>
    <link href="http://louisrli.github.io/blog/2014/01/18/tips-for-computer-science-internship-interviews/"/>
    <updated>2014-01-18T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2014/01/18/tips-for-computer-science-internship-interviews</id>
    <content type="html"><![CDATA[<p>This post is meant to help computer science undergraduates looking for a software engineering internship in the summer. Applying to internships can be daunting, and this post will hopefully address some of the commonly asked questions that I see on Reddit’s <a href="http://www.reddit.com/r/cscareerquestions">cscareerquestions</a>.
Along with some other miscellanea regarding applications, this post covers two things: </p>

<ol>
  <li>What are most internship interviews like?</li>
  <li>How should I prepare for them?</li>
</ol>

<h2 id="background">Background</h2>
<p>I did <a href="http://louisrli.github.io/blog/2013/06/28/researchtips/">research</a> last summer, and this summer was my first time seriously looking for an internship. From the beginning of September 2013 to the beginning of January 2014 (around 16 weeks), I did a lot of interviewing: 20 technical interviews, four recruiter interviews, two coding challenges, one product manager interview, and one trader interview (involuntarily moved from software engineering). 
One of the reasons that I did so many interviews was that I did poorly on many of my interviews for the first month. 
Despite having read about interviewing on the internet, I wish I had known more <em>concretely</em> how to prepare.</p>

<!-- more -->

<p>Finally, note that I mostly interviewed with medium to large companies in Silicon Valley: your mileage may vary with local companies or smaller startups.
Out of respect for the companies that I interviewed with, I won’t be linking specific companies to specific interview questions.</p>

<h1 id="the-three-types-of-internship-interviews">The three types of internship interviews</h1>

<p>I would categorize my internship interviews as falling into one of three categories:</p>

<ol>
  <li><strong>The programming interview:</strong> algorithms, data structures, coding</li>
  <li><strong>The “what you’ve done interview”:</strong> you and your projects</li>
  <li><strong>The language-specific interview:</strong> quizzed about a language you claim to know</li>
</ol>

<p>I’ll explain these in more depth below, adding details on how to prepare for each category. Note
that not every interview falls precisely into one of the three categories, and some interviews
are a mix of multiple categories.</p>

<ol>
  <li>
    <h2 id="the-programming-interview">The programming interview</h2>
  </li>
</ol>

<p>The <strong>programming interview</strong> is the most common type of interview, especially if you’re not interviewing for a specific team.
This is how most people envision computer science interviews: you’re asked one or more programming questions, 
and you implement solutions on a collaborative editor like <a href="http://stypi.com">Stypi</a> or <a href="http://collabedit.com">Collabedit</a>. </p>

<p>I would further divide these interviews into two topics:</p>

<ol>
  <li>Questions involving loops, lists, or strings (easier)</li>
  <li>Questions involving specific data structures (harder)</li>
</ol>

<p>I think the first category is easier, and it includes questions like: <em>Remove duplicates from a list</em> or <em>Generate all of the permutations of a string</em>. Even if you don’t immediately know the answer, there’s a chance that you can figure it out without requiring knowledge of a specific algorithm or data structure.</p>

<p>I find the second category trickier, and sometimes the question will be hard 
or near impossible if you don’t know about a specific data structure or algorithm.
For example, if you’ve never done breadth-first tree traversal, 
and you’re asked: <em>Print the values in this tree level-by-level</em> 
(a question that I received from two different companies),
the question will be much harder.<br />
In one interview, I did poorly when we delved 
deeply into variations of hash tables, but I was only familiar 
with basic linked list hash tables.</p>

<p>At the end of every question, you will almost always be asked to 
discuss the Big-O complexity of your implementation. </p>

<h3 id="checklist">Checklist</h3>

<p>Here’s what I didn’t realize at first: instead of just walking
in, <strong>you should study for interviews</strong>.
Unless you do algorithmic challenges on a regular basis, it’s worth the time
to read and practice.</p>

<ul>
  <li><strong>Read <em><a href="http://www.amazon.com/Programming-Interviews-Exposed-Secrets-Programmer/dp/047012167X">Programming Interviews Exposed</a></em>:</strong> 
Focus on these topics: string manipulation, linked lists, doubly linked lists, hash tables, 
trees, queues, stacks, depth-first search, breadth-first-search, basic graphs,
basic complexity.</li>
  <li><strong>Check Glassdoor</strong>: Many companies have interview questions on Glassdoor. Your goal isn’t
to study the interview questions in advance, but you can get a good idea of the general difficulty
of the programming questions.</li>
  <li><strong>Practice at least once</strong>: I’ll let the interview books cover
this process in more detail, but if this is your first interview, 
I highly recommend practicing an interview question from start to finish with a friend.</li>
</ul>

<p>I would take books like <em>Programming Interviews Exposed</em> with a grain of salt. Except for some of the very big companies, like Facebook,
the interview questions for internships are generally much easier than those for senior developers. You won’t be asked to write
a red-black tree from scratch. From my experience, the list above comprehensively covers the topics from my interview experience
(suggestions welcome).</p>

<p>Depth- and breadth-first search (DFS and BFS, respectively) were extremely popular, and I would estimate <strong>over half of my algorithms interviews 
were best solved with DFS or BFS</strong>. Know them!</p>

<ol>
  <li>
    <h2 id="the-what-youve-done-interview">The “what you’ve done” interview</h2>
  </li>
</ol>

<p>The <strong>“what you’ve done” interview</strong> is a non-technical, pleasant conversation with your interviewer,
where you get the opportunity to talk about your resume and projects. I found that this
type of interview was more common in small and medium sized companies.</p>

<p>Empirically, I did better on these interviews than on algorithmic interviews, because
it was an opportunity to pitch myself as a passionate developer.
I usually talked about my research, my past internship, 
and/or my experience at <a href="https://www.meteor.com/blog/2013/07/09/congratulations-to-the-meteor-summer-hackathon-2013-teams">the Meteor Summer Hackathon</a>.</p>

<p>Note that I’m a junior (third year undergraduate student). 
If you’re a freshman or sophomore, don’t panic if you don’t have a lot to
talk about yet. Without sideprojects and/or past internships, however,
this interview can be tough. 
You can use course projects, but I think people know that most course projects
are a few files that are hacked together in a few days (varies by school, of course).</p>

<h3 id="checklist-1">Checklist</h3>

<p>Be prepared to talk in-depth about any jobs and projects on your resume. 
For each project, you’ll want to be ready to answer these questions:</p>

<blockquote>
  <p>What was the project?</p>
</blockquote>

<p><a></a> <!-- break the blockquote --></p>

<blockquote>
  <p>What was the scope of the project? (i.e., how much time, how big was it)</p>
</blockquote>

<p><a></a> <!-- break the blockquote --></p>

<blockquote>
  <p>What was your role in the project?</p>
</blockquote>

<p><a></a> <!-- break the blockquote --></p>

<blockquote>
  <p>What did you learn?</p>
</blockquote>

<p><a></a> <!-- break the blockquote --></p>

<blockquote>
  <p>What were some of the challenges in the project?</p>
</blockquote>

<p>If you prepare these answers, you’ll be ready to answer a more general question that frequently shows up in interviews:</p>

<blockquote>
  <p>Tell me about a technical challenge that you had.</p>
</blockquote>

<ol>
  <li>
    <h2 id="the-language-specific-interview">The language-specific interview</h2>
  </li>
</ol>

<p>The language-specific interview tests your knowledge about a specific language that you
claim to know on your resume. This interview often shows up if you’ve been placed to interview 
with a specific team (e.g., iOS Safari team at Apple, YUI team at Yahoo).</p>

<p>I was never asked coding questions in these interviews, but the interviewers
expected me to show my knowledge through my answers to quiz questions,
my discussion of relevant projects, and my opinions on language features.</p>

<h3 id="checklist-2">Checklist</h3>

<p>If you are placed to interview with a team that uses a specific
language (or framework), you should prepare for the following questions.
I was asked each of these on multiple occasions:</p>

<blockquote>
  <p>What makes {language} different from other languages?</p>
</blockquote>

<p><a></a> <!-- break the blockquote --></p>

<blockquote>
  <p>If you had to change something in {language}, what would you change?</p>
</blockquote>

<p><a></a> <!-- break the blockquote --></p>

<blockquote>
  <p>Tell me about a technical challenge that you had when you were working on a project in {language}.</p>
</blockquote>

<h3 id="javascript-specific-questions">JavaScript specific questions</h3>

<p>In addition to the above questions, I was also asked the following question 
on three different occasions for JavaScript-related internships:</p>

<blockquote>
  <p>Tell me about closures in JavaScript.</p>
</blockquote>

<p>I usually answered with an explanation of 1. callbacks 2. function scope in JavaScript. 
Closures allow for more traditional object-oriented programming (e.g., objects in Backbone.js are just closures).</p>

<p>One question that I was <em>not</em> asked in any interview was to recite the value of <code>this</code> in various contexts
(not that this means it isn’t fair game).</p>

<h2 id="odds-and-ends">Odds and ends</h2>

<p>Again, not every interview will fall into one of these three categories. I encountered a couple of weird interview styles:</p>

<ul>
  <li><em>Straight quizzing:</em> One first round interview a recruiter who read quiz questions about databases, Unix systems, and web requests.
The recruiter had a list of answers, and I suspect one important metric, in addition to correctness, was how confidently you answered.</li>
  <li><em>Coursework:</em> I interviewed with a very cool stealth startup working on something that has it roots in security research. Correspondingly,
the whole interview was about my coursework in compilers and theory of computation – no technical questions.</li>
</ul>

<h1 id="beginning-the-interview">Beginning the interview</h1>

<p>Some bigger companies dive straight into the technical part of interviews, but your interviewer will <strong>almost always</strong> ask you a very important question (or some variant) that you should prepare:</p>

<blockquote>
  <p>Tell me about yourself.</p>
</blockquote>

<p>Keep it succinct! I would say it should be a minute long at most. Hit the important points about your interests and experience, and spare your interviewer the life story. I’m saying this because I made the mistake of having a long pitch in the first few interviews, and I could tell that the interviewer ended up getting bored.</p>

<h1 id="ending-the-interview">Ending the interview</h1>

<p>Even when the interview runs over the allocated time, your interviewer will ask:</p>

<blockquote>
  <p>Do you have any questions for me?</p>
</blockquote>

<p>I used to have a lot of trouble with this, but after I started treating it as
an opportunity for conversation, it became much easier. This is a chance to connect on a personal level with the interviewer.
If your performance was borderline, having an insightful conversation
with the interviewer can’t hurt.</p>

<p>If the interviewer hadn’t described himself or herself yet, the first thing I asked was:</p>

<blockquote>
  <p>Can you tell me more about what you do?</p>
</blockquote>

<p>I let the conversation flow from there. If there’s not much to follow up on, I’ll
ask about how they test their product or choose to target new features. There’s <a href="http://programmers.stackexchange.com/questions/16436/do-you-have-any-questions-for-us-in-an-interview">a very good list</a> on Programmers Stack Exchange, although not all of them are suitable for potential interns to ask.</p>

<h1 id="miscellaneous-faq">Miscellaneous: FAQ</h1>

<p>These are my answers to questions that either I was asking at the beginning of the application process or I see 
frequently asked. Most of these don’t have black-or-white answers.</p>

<blockquote>
  <p>How long should my resume be?</p>
</blockquote>

<p>For companies based in the US, your resume should not be longer than one page. Personally,
I don’t like reading resumes longer than one page. From what I’ve read from various
recruiters and managers on the internet, they don’t either, although it doesn’t mean
automatic rejection.</p>

<p>Make sure your resume looks professional – spacing, font, structure. Use a serif font!</p>

<p>If your resume is too long, consider cutting out parts that are not tech related – clubs, extracurriculars, experience in a different field.</p>

<p>Finally, don’t include things like your high school GPA, because they don’t matter to the people reading your resume.</p>

<blockquote>
  <p>When should I start applying?</p>
</blockquote>

<p>Most internship applications started popping up in October and November.
I think it doesn’t hurt to apply earlier, although one friend told me that
intern candidates at his company usually fared better in spring than in fall.</p>

<p>Before last summer, after I had already decided to do research, I did receive
a few emails for interviews as late as March. If you didn’t jump on it in October,
don’t panic.</p>

<blockquote>
  <p>How important are sideprojects? </p>
</blockquote>

<p>It depends on the company, but if you’re a freshman (first year) or 
a sophomore (second year), it’s important. 
When I applied to my first internship in freshman spring, 
the recruiter emailed me back saying that the manager 
wanted to know if I had any sideprojects. In addition
to spicing up your resume, it gives you
something substantive to talk about in the “what you’ve done” interviews.</p>

<blockquote>
  <p>How long can it take to hear back after an interview?</p>
</blockquote>

<p>It varies by company. 
From small to medium sized companies, I heard back anywhere from a day to a week.
Without exception, after a final round interview, it took every big company two weeks to a month 
to respond with either an offer or rejection.</p>

<blockquote>
  <p>How can I overcome nervousness during interviews?</p>
</blockquote>

<p>In some of the algorithmic interviews, when I started doing poorly, I would just freeze and ramble – especially if I hadn’t slept much the previous night because of schoolwork.
Eventually, the interviewer would (pretty much) tell me the answer, which almost always led to rejection after the interview. </p>

<p>If this happens to you, my advice is to tell the interviewer, “Let me consolidate my thoughts for a moment.” Take a few deep breaths, don’t think about anything, and then tackle the question again.</p>

<p>If you feel nervous from the very beginning, try to persuade yourself that it’s only a friendly conversation. </p>

<blockquote>
  <p>How can I know how well my interview went?</p>
</blockquote>

<p>In my experience, if the interviewer starts talking about how much responsibility interns 
have <em>and</em> you didn’t explicitly ask about it – the interview probably went well.  This is not a guarantee by any means.</p>

<p>I’ve read a few things on the internet about asking your interviewer how they felt the interview went. 
I haven’t tried this before, but feel free to let me know if you have. 
I think it would be a useful source of feedback.</p>

<p>Hope this helps.</p>

<p><em>Any specific questions or insights? Feel free to to comment or ping me at <code>pong [at] outlook.com</code></em></p>

<p><strong>UPDATE</strong>: Before publishing this article, I asked one person – Kevin Gong, a senior at UC
Berkeley – to edit this article. This was the last time that I talked to him. 
In March 2014, Kevin passed away in a car accident. He was
incredibly passionate about applying technology to the world and helping younger students kickstart
their careers. If this article helped you, please consider donating to the <a href="https://www.facebook.com/events/1562918887253164/">Kevin K. Gong Memorial Scholarship for Bright Minds and Big Hearts</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Erasable Code Contracts]]></title>
    <link href="http://louisrli.github.io/blog/2014/01/09/erasable-contracts/"/>
    <updated>2014-01-09T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2014/01/09/erasable-contracts</id>
    <content type="html"><![CDATA[<p>This semester, I took a course on the science of cybersecurity, targeted toward an audience with some programming languages background. </p>

<p>A classmate and I had a semester long research project on “erasable” <a href="http://en.wikipedia.org/wiki/Code_contract">code contracts</a>. More details are below.</p>

<p>This was a valuable experience, giving me an opportunity to work on two things that I hadn’t done before:</p>

<ol>
  <li>Proof-based research</li>
  <li>Basic proofs of a calculus. While type soundness proofs and their associated lemmas are core to many calculi, many introductory programming language courses, including the one that I took, skip the details of the proofs.</li>
</ol>

<!-- more -->

<p>Here’s the abstract:</p>

<blockquote>
  <p>Contract programming is a design approach that allows programmers to design formal specifications for software, known as “contracts”. These contracts, executed at runtime, allow programmers to make assertions about the behavior of their software and ensure program correctness. In a language with side-effects, however, it is possible for these contracts to modify memory and consequently change the behavior of the program. While contracts provide the specifications, these specifications clearly should not change the behavior of the program that they enforce. Instead, if the contracts were removed (“erased”), then the behavior of the program should be the same as if the contracts remained. This notion is captured by the idea of erasability. We present a calculus for erasable contracts, establish properties such as type soundness, and prove a formal definition of erasability for the language.</p>
</blockquote>

<p><a href="http://louisrli.github.io/downloads/erasable-final.pdf">Download the PDF</a> or view it below. Note that it’s missing some of the grittier nuances of the eta-reductions.</p>

<embed src="http://louisrli.github.io/downloads/erasable-final.pdf" type="application/pdf" width="100%" height="600" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hungrier: Harvard Dining Menu, Re-released]]></title>
    <link href="http://louisrli.github.io/blog/2013/08/22/hungry-revamped/"/>
    <updated>2013-08-22T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2013/08/22/hungry-revamped</id>
    <content type="html"><![CDATA[<p>I’ve rewritten and redesigned <a href="http://louisrli.github.io/hungry/">Hungry</a>, a site that filters the noisy Harvard dining menu for relevant entries. If you’re reading this during the school year, there probably won’t be anything, since student dining isn’t open.</p>

<p>This version was written in <a href="http://marionettejs.com">Marionette.js</a>, which has been my client-side framework of choice for the past few months (I’ve been using Meteor for things that require a more involved database). It still retains an obnoxious minimalism, but this time with lowercase text instead of uppercase text.</p>

<p><a href="https://github.com/louisrli/hungry">Source code here</a>, contributions welcome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Use Meteor.js Routing with Disqus]]></title>
    <link href="http://louisrli.github.io/blog/2013/07/29/using-meteor-js-with-disqus/"/>
    <updated>2013-07-29T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2013/07/29/using-meteor-js-with-disqus</id>
    <content type="html"><![CDATA[<p>On most sites, using Disqus as the commenting system is as simple as copying the <a href="http://disqus.com/admin/universalcode/">Universal Code</a> (also known as <code>embed.js</code>) into a web page. In single-page JavaScript applications, however, much of the rendering is on the client-side. This means that <code>embed.js</code> might lead to stale Disqus threads or function incorrectly as pages are re-rendered.</p>

<p>This article explains how to integrate Disqus with <a href="http://meteor.com">Meteor.js</a> (version 0.6.4.1 at the time of writing). If you want one Disqus thread for each route, copying the Universal Code won’t ensure that Disqus loads the correct thread for each page. Instead, the comments will either fail to load or retrieve a stale thread.</p>

<p>When <code>embed.js</code> is loaded multiple times (when pages rerender and run the script multiple times), the following error will appear in the console: </p>

<pre><code>DISQUS assertion failed: Unsafe attempt to redefine existing module &lt;name&gt;
</code></pre>

<p><em>Note</em>: I’m using <a href="https://github.com/tmeasday/meteor-router">Meteor Router</a> to create URL paths in my application, although this method should work with any routing system.</p>

<!-- more -->

<h2 id="disqus-single-sign-on">Disqus Single Sign-on</h2>
<p>As a bonus, I’ve added the optional code snippet in <code>Deps.autorun()</code> for using <a href="http://help.disqus.com/customer/portal/articles/236206-integrating-single-sign-on">Disqus Single Sign-on</a> with Meteor. If you want to see the server-side code in JavaScript, take a look at <a href="https://github.com/disqus/DISQUS-API-Recipes/blob/master/sso/javascript/main.js">the examples that I added</a> to the Disqus API Recipes.</p>

<h2 id="annotated-code">Annotated Code</h2>

<p>The code is written in <a href="http://coffeescript.org/">CoffeeScript</a>. If you want to take a look at the JavaScript version, you can use the <a href="http://coffeescript.org/#try:">CoffeeScript translator</a>. Meteor automatically compiles <code>.coffee</code> files to <code>.js</code>.</p>

<p>With the code below, all you have to do is add the following to your Meteor Handlebars template to include Disqus comments:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> {{&gt; disqus}} </span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Easy, right?</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Meteor Disqus template manager  (disqus.coffee)</span> <a href="http://louisrli.github.io/downloads/code/disqus.coffee">download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
</pre></td><td class="code"><pre><code class="coffeescript"><span class="line"><span class="nv">Template.disqus.rendered = </span><span class="nf">-&gt;</span>
</span><span class="line">  <span class="cm">###</span>
</span><span class="line"><span class="cm">  # We don&#39;t want to load Disqus until the first time the template is</span>
</span><span class="line"><span class="cm">  # rendered, since it requires the #disqus_thread div</span>
</span><span class="line"><span class="cm">  # Triggers Deps.autorun (below)</span>
</span><span class="line"><span class="cm">  ###</span>
</span><span class="line">  <span class="nx">Session</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s">&quot;loadDisqus&quot;</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="cm">###</span>
</span><span class="line"><span class="cm">  # OPTIONAL: Only include the part below if you&#39;re using</span>
</span><span class="line"><span class="cm">  # Disqus single-sign on</span>
</span><span class="line"><span class="cm">  # Generate the disqusSignon variable appropriately from your server</span>
</span><span class="line"><span class="cm">  ###</span>
</span><span class="line">  <span class="nv">disqusSignon = </span><span class="nx">Session</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&quot;disqusSignon&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="k">if</span> <span class="nx">Meteor</span><span class="p">.</span><span class="nx">user</span><span class="p">()</span> <span class="o">and</span> <span class="nx">disqusSignon</span>
</span><span class="line">    <span class="nb">window</span><span class="p">.</span><span class="nv">disqus_config = </span><span class="nf">-&gt;</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nv">page.remote_auth_s3 = </span><span class="s">&quot;</span><span class="si">#{</span><span class="nx">disqusSignon</span><span class="p">.</span><span class="nx">auth</span><span class="si">}</span><span class="s">&quot;</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nv">page.api_key = </span><span class="s">&quot;</span><span class="si">#{</span><span class="nx">disqusSignon</span><span class="p">.</span><span class="nx">pubKey</span><span class="si">}</span><span class="s">&quot;</span>
</span><span class="line">      <span class="c1"># ... other Disqus configs </span>
</span><span class="line">
</span><span class="line">    <span class="cm">###</span>
</span><span class="line"><span class="cm">    # Whenever the template is rendered, trigger a Disqus reset.</span>
</span><span class="line"><span class="cm">    # This will find the correct thread for the current page URL.</span>
</span><span class="line"><span class="cm">    # See http://help.disqus.com/customer/portal/articles/472107-using-disqus-on-ajax-sites</span>
</span><span class="line"><span class="cm">    ###</span>
</span><span class="line">    <span class="nx">DISQUS</span><span class="o">?</span><span class="p">.</span><span class="nx">reset</span><span class="p">(</span>
</span><span class="line">       <span class="nv">reload: </span><span class="kc">true</span>
</span><span class="line">       <span class="nv">config: </span><span class="nf">-&gt;</span>
</span><span class="line">    <span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="nx">Deps</span><span class="p">.</span><span class="nx">autorun</span><span class="p">(</span><span class="nf">-&gt;</span>
</span><span class="line">  <span class="c1"># Load the Disqus embed.js the first time the `disqus` template is rendered</span>
</span><span class="line">  <span class="c1"># but never more than once</span>
</span><span class="line">  <span class="k">if</span> <span class="nx">Session</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&quot;loadDisqus&quot;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">DISQUS</span>
</span><span class="line">    <span class="c1"># Below is the Disqus Universal Code</span>
</span><span class="line">    <span class="c1"># (in Coffeescript, backticks escape Javascript code)</span>
</span><span class="line">    <span class="o">`</span>
</span><span class="line">    <span class="sr">/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */</span>
</span><span class="line">    <span class="nx">var</span> <span class="nv">disqus_shortname = </span><span class="s">&#39;YOUR_SHORTNAME&#39;</span><span class="p">;</span> <span class="o">//</span> <span class="nv">required: </span><span class="nx">replace</span> <span class="nx">example</span> <span class="nx">with</span> <span class="nx">your</span> <span class="nx">forum</span> <span class="nx">shortname</span>
</span><span class="line">
</span><span class="line">    <span class="sr">/* * * DON&#39;T EDIT BELOW THIS LINE * * */</span>
</span><span class="line">    <span class="p">(</span><span class="nx">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">     <span class="nx">var</span> <span class="nv">dsq = </span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s">&#39;script&#39;</span><span class="p">);</span> <span class="nv">dsq.type = </span><span class="s">&#39;text/javascript&#39;</span><span class="p">;</span> <span class="nv">dsq.async = </span><span class="kc">true</span><span class="p">;</span>
</span><span class="line">     <span class="nv">dsq.src = </span><span class="s">&#39;//&#39;</span> <span class="o">+</span> <span class="nx">disqus_shortname</span> <span class="o">+</span> <span class="s">&#39;.disqus.com/embed.js&#39;</span><span class="p">;</span>
</span><span class="line">     <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">dsq</span><span class="p">);</span>
</span><span class="line">     <span class="p">})();</span>
</span><span class="line">     <span class="o">`</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Meteor Disqus template (disqus.html)</span> <a href="http://louisrli.github.io/downloads/code/disqus.html">download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;template</span> <span class="na">name=</span><span class="s">&quot;disqus&quot;</span><span class="nt">&gt;</span>
</span><span class="line">{{#isolate}}
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;my-disqus&quot;</span><span class="nt">&gt;</span>
</span><span class="line">  <span class="c">&lt;!-- Begin Disqus universal code --&gt;</span>
</span><span class="line">  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;disqus_thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class="line">
</span><span class="line">  <span class="nt">&lt;noscript&gt;</span>Please enable JavaScript to view the
</span><span class="line">    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://disqus.com/?ref_noscript&quot;</span><span class="nt">&gt;</span>comments powered by Disqus.<span class="nt">&lt;/a&gt;</span>
</span><span class="line">  <span class="nt">&lt;/noscript&gt;</span>
</span><span class="line">
</span><span class="line">  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://disqus.com&quot;</span> <span class="na">class=</span><span class="s">&quot;dsq-brlink&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    comments powered by <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;logo-disqus&quot;</span><span class="nt">&gt;</span>Disqus<span class="nt">&lt;/span&gt;</span>
</span><span class="line">  <span class="nt">&lt;/a&gt;</span>
</span><span class="line">  <span class="c">&lt;!-- End Disqus universal code --&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line">{{/isolate}}
</span><span class="line"><span class="nt">&lt;/template&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="disqus-in-other-single-page-javascript-frameworks">Disqus in Other Single-page JavaScript Frameworks</h2>

<p>If you’re using another single-page JavaScript framework like Ember.js, Angular.js, etc., here’s a general strategy for using Disqus:</p>

<ol>
  <li>Wait until the first time a Disqus thread needs to be loaded.<br />
When <code>div #disqus_thread</code> has been rendered, load <code>embed.js</code> into the page.</li>
  <li>Set a global flag to ensure that <code>embed.js</code> is not loaded again.</li>
  <li>Each time a new Disqus thread is needed, trigger a <code>DISQUS.reset()</code>, including
the first time <code>embed.js</code> is loaded. Again,
make sure that <code>div #disqus_thread</code> is rendered in the DOM, or there may be an error
about appending an element to <code>null</code>.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Five Research Tips for First-Time Undergraduate Researchers]]></title>
    <link href="http://louisrli.github.io/blog/2013/06/28/researchtips/"/>
    <updated>2013-06-28T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2013/06/28/researchtips</id>
    <content type="html"><![CDATA[<p>Today, I submitted my first extended abstract to the ASSETS 2013 Student Research Competition. This marks my first tangible output in undergraduate research. This isn’t quite the end of the story – I plan to continue gathering results and writing a paper for submission to CHI. It is, however, time for reflection.</p>

<!-- more -->

<p>My research endeavors (in human-computer interaction) have been an incredible learning experience. In this post, I want to talk about some of the more <em>practical</em>, elementary lessons that I learned about the research process. These are mostly time-saving lessons. Unfortunately, I missed a lot of these lessons when I did medical research in high school. My sincerest hope is that another undergraduate researcher, working on his or her first research project, will stumble upon this post and save some valuable time.</p>

<p><strong>I have no doubt that grad students and experienced researchers know these already – these are for first-time lead researchers.</strong> Or, if you’re a grad student or Ph.D that disagrees with anything below, feel free to impart your wisdom by correcting or qualifying it (I place a lot of weight on the wisdom of the ancients – not that you’re ancient…).</p>

<h3 id="design-and-analysis-find-answers-in-the-results-and-methods-sections">1. Design and analysis: Find answers in the results and methods sections</h3>

<p>Research papers aren’t only valuable for their graphs and conclusions. Chances are, there are similarly designed experiments floating around on Google Scholar (what papers are in your literature review?).</p>

<p>Although I initially relied on asking others, I found that consulting past work is an excellent way of finding answers to questions yourself. These include answers to questions like:</p>

<ul>
  <li>What statistical analyses do others usually employ on experiments of similar design?</li>
  <li>How do others exclude outliers?</li>
  <li>How did others run experiments that had similar conditions?</li>
  <li>What metric is usually used to present errors in clicking tasks?</li>
</ul>

<p>And many more. I still discussed my various approaches with other people before moving forward to make sure that I wasn’t misinterpreting the papers, but if you’re ever feeling <em>clueless</em> about anything, check the literature first.</p>

<h3 id="data-collection-if-your-data-is-simple-just-store-it-as-csv">2. Data Collection: If your data is simple, just store it as CSV</h3>

<p>Really, just store it as CSV. <strong>Every data analysis application accepts CSV</strong>, and it saves time from parsing to store the raw results as CSV.</p>

<p>I went through a few iterations of data storage. First, I stored things in a MySQL database. Having interned at a database company last summer, the thought of appending my data to a plaintext file was horrifying.</p>

<p>I soon realized, however, that the overhead of storing, retrieving, and quickly inspecting values in a database was more trouble than it was worth. I opted to store my results (time, error, trajectory, detailed mouse logs, questionnaires – each with associated metadata) as JSON files, which made the logs easy to quickly inspect. Since I used MATLAB (more on that later) and JMP for analysis, I eventually parsed this JSON into numpy/MATLAB matrices, and finally, just CSV files. Oops!</p>

<p>Before you start gathering data, envision yourself processing the data. Keep in mind that you’ll most likely want to process your data as tables.</p>

<p>The caveat is that CSV isn’t too good at handling more complex data with parent-child relationships (though you could stringify lists into a cell).</p>

<h3 id="communication-make-it-easy-for-your-pi">3. Communication: Make it easy for your PI</h3>

<p>Professors have a reputation for being busy, though my PI (research advisor) is receptive to meeting if I need it. One thing that I quickly learned is that meetings go much more smoothly if I make it easy for him. More concretely: <strong>when possible, I should generate ideas and present them to him for feedback, rather than having him do the heavy lifting.</strong></p>

<p>After all, your PI is helping <em>you</em>, so he or she deserves your best effort to make the process less painful. These include things like being ready for meetings. At first, our meetings were pretty disorganized, but I learned that it’s a good idea to write up a very specific list of topics beforehand. This ensured that the meetings ran smoothly: demo, receive feedback, iterate through questions and discussion points, talk about next steps.</p>

<h3 id="data-analysis-dont-use-matlab-for-statistical-analysis">4. Data Analysis: Don’t use MATLAB for statistical analysis</h3>

<p>For some reason (the reason being that I was only familiar with MATLAB and Excel for analysis), I thought it was a good idea to use MATLAB for doing statistical analysis and making graphs. While MATLAB has a statistics toolbox and graphing functionality, it’s not great for playing around with data and generating graphs quickly.</p>

<p>The choice of program is personal preference – or in my case, inheritance. After spending an embarrassing amount of time grouping my data in MATLAB, I watched my PI replicate my work in five minutes using the Graph Builder in JMP. I ended up using JMP, and I really like it. The Graph Builder is wonderful. The documentation is okay (MATLAB has great documentation).</p>

<p>There are a lot of options – R, Stata, SPSS. I tried both SPSS and JMP. My initial impressions is that SPSS has a pretty bad user experience, while JMP’s workflow seems better thought out (though minor things could be improved).</p>

<p>An auxiliary lesson is that it’s worth asking a grad student, postdoc, or PI about their workflow before beginning an endeavor. Unfortunately, the ones in my group work in a different office and weren’t immediately accessible, but I’ll definitely ask if I find myself in a new situation.</p>

<h3 id="graphing-for-papers-excel-is-a-good-option">5. Graphing for papers: Excel is a good option</h3>

<p>There’s graphing for the purpose of playing with data, then there’s graphing for the purpose of producing a good looking PDF.</p>

<p>For the latter, I found that neither JMP nor MATLAB would let me style my graphs with the flexibility and speed that I wanted. One of the postdocs said that she used R or Excel. Excel was actually a very good option, since I just wanted to change the fonts, size, and bar labels. Lesson: with all the fancy tools, don’t forget about Excel.</p>

<p>I suspect Python might have some good graphing libraries, although the only one that I’ve used is <code>matplotlib</code>, which was basically MATLAB. It’s also possible to create graphs directly in TeX, although I would guess that it’s harder to iterate on the styling.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sophomore Spring: A Brief List of What I Learned]]></title>
    <link href="http://louisrli.github.io/blog/2013/05/13/what-i-learned-this-semester/"/>
    <updated>2013-05-13T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2013/05/13/what-i-learned-this-semester</id>
    <content type="html"><![CDATA[<p>Here’s a concise list of [some of] the things that I learned this semester. I would say that the things that I learned this semester are a lot more diverse than those from last semester (I’d describe last semester as…math).</p>

<h2 id="research">Research</h2>

<p>(I work in an HCI research group).</p>

<p><strong>Demo or die</strong>.</p>

<p><strong>Experimental design in HCI</strong> is very similar to experimental design in psychology. HCI is human-computer interaction; psychology is human interaction.</p>

<!-- more -->

<p><strong>What does my advisor do in his day-to-day life?</strong> As an HCI professor, he is a master of experimental design. As an advisor, his day is often filled with meetings, colloquia, and proposals. I wonder when he finds time to hack on something or put together a project (but amazingly, he manages to do it).</p>

<p><strong>What is the life of a grad student like?</strong> They seem to have a lot of time to code things. They attend a lot of talks, possibly looking for inspiration?</p>

<p>Group meeting is very insightful.</p>

<p>I’ve known, but now better understand, the concept of <strong>programming as a tool.</strong> The person reading your paper doesn’t care about your code, your backend, or your choice of framework.</p>

<h2 id="programming-languages">Programming Languages</h2>

<p>The class could be titled <em>Programming Languages Theory</em>, since it’s an introductory class. I think students who haven’t taken it and aren’t familiar with the field aren’t too sure what topics to expect.</p>

<p>What is programming language (PL) theory? Here’s a meme-style joke that I usually think of when someone asks me what it is:</p>

<dl>
  <dt>What students outside of computer science think:</dt>
  <dd>“Oh, so you learn how to program in a lot of different programming languages.”</dd>
  <dt>What computer science students unfamiliar with PL think (myself included at the time):</dt>
  <dd>“You do something formal with programming languages. You prove things about them. Or something like that.”</dd>
  <dt>What it really is:</dt>
  <dd>“Logic and inference rules. Induction. Semantics and types. More inference rules. Models.”</dd>
</dl>

<p>There is a lot more to the field, but that’s what was packed into the introductory course.</p>

<p>There also seem to be a lot of ways to teach a PL course. From looking at other resources on the internet, a lot of professors choose to make the whole course closely follow some programming language, and all concepts are taught with applications. I think I prefer the approach in my course, where the first half was purely theory and the second half mixed theory with code.</p>

<h2 id="computational-linguistics">Computational Linguistics</h2>

<p>Lambda-calculus has applications in grammars and quantifiers!</p>

<p>I actually gained a good understanding of the problems in natural language processing. It was a good class for breadth, and my final project, which tackled <a href="http://en.wikipedia.org/wiki/Word-sense_disambiguation">word sense disambiguation</a>, was pretty interesting.</p>

<p>Prolog is interesting. I’m pretty impressed by how easy it is to build a basic parser in Prolog.</p>

<h2 id="rover">Rover</h2>

<p><strong>Clients don’t care about the technical details.</strong> Don’t make excuses, get things done, and translate them to the appropriate nontechnical language.</p>

<p><strong>Keep communicating with the client.</strong> Just as you would <a href="http://online.wsj.com/article/SB122511931313072047.html">manage up</a> with your boss, go out of your way to maintain a good relationship with clients.</p>

<h2 id="development">Development</h2>

<p>Javascript frameworks seem to be the new thing. Client-side frameworks for single page web applications make a lot of sense though, reducing the unnecessary overhead of maintaining the server. I’d definitely like to try <a href="http://meteor.com">Meteor</a>. No jQuery spaghetti.</p>

<p>That being said, a <em>lot</em> more experience with web development this semester through my research project. If I could go back, I would have used a Javascript framework (but that’s what the first major project in a language is for!).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Up-to-date Guide on How to Delete All Posts on Your Tumblr]]></title>
    <link href="http://louisrli.github.io/blog/2013/05/11/how-to-delete-all-tumblr-posts/"/>
    <updated>2013-05-11T00:00:00+02:00</updated>
    <id>http://louisrli.github.io/blog/2013/05/11/how-to-delete-all-tumblr-posts</id>
    <content type="html"><![CDATA[<p>One of my friends asked me how to batch delete all of the posts on a <a href="http://tumblr.com">Tumblr</a>. There are some PHP and Ruby scripts on the internet that claim to achieve this, but they seem to be outdated in regards to the Tumblr API, or they require installing some packages.</p>

<!-- more -->

<h2 id="instructions">Instructions</h2>

<p>This will allow you to delete 100 posts at a time. Unfortunately, if you try more, Tumblr will give you a warning that only 100 posts can be edited at one time.</p>

<ol>
  <li>On the right side of the Tumblr dashboard, click <strong>Posts</strong> underneath the name of your blog.</li>
  <li>This should bring up a link called <strong>Mass Post Editor</strong>. Click on <strong>Mass Post Editor</strong>.</li>
  <li>You’ll be presented with your posts as tiles. <strong>Keep scrolling down</strong> until at least 100 posts (eyeball it) appear on the screen.</li>
  <li>
    <p>Paste the following code snippet in the URL bar. It should select the first 100 posts with checkmarks. <strong>NOTE:</strong> Some browsers will remove the <code>javascript:</code> in front of it. Double check that it’s still there, and if not, type <code>javascript:</code> at the beginning of the pasted part. </p>

    <pre><code>  javascript:$('.overlay').slice(0, 100).click()
</code></pre>
  </li>
  <li>Click <strong>Delete selected posts</strong>.</li>
  <li>Refresh the page if needed, and delete another 100 posts!</li>
</ol>

<p>If for some reason this doesn’t work, let me know in the comments. I’ll try to keep this up-to-date.</p>

<p>Last updated: December 29, 2013</p>

<h2 id="technical-details">Technical Details</h2>

<p>Tumblr now uses <a href="http://jquery.org">jQuery</a>. An older version of this post loaded the <a href="https://github.com/kangax/protolicious">Protolicious</a> library, but some time between May 2013 and December 2013, Tumblr switched JavaScript libraries.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Rational Approximation of Pi Using the Pigeonhole Principle]]></title>
    <link href="http://louisrli.github.io/blog/2013/01/31/approximating-pi-pigeonhole-principle/"/>
    <updated>2013-01-31T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2013/01/31/approximating-pi-pigeonhole-principle</id>
    <content type="html"><![CDATA[<p>Below is a short Python script that finds a fractional approximation of \(\pi\) using the first 1001 multiples of \(\pi\) (the case with 11 multiples of \(\pi\) can easily be done by hand). It makes use of the <em>pigeonhole principle</em>. The 11-multiple version of the problem has been used in the module teaching the pigeonhole principle in various classes that I have taken or taught.</p>

<p>The <a href="http://en.wikipedia.org/wiki/Pigeonhole_principle">pigeonhole principle</a> states that:</p>

<blockquote>
  <p>If \(n &gt; m\) and \(n\) pigeons are placed in \(m \) pigeonholes, then one pigeonhole must contain more than one pigeon.</p>
</blockquote>

<!-- more -->

<h2 id="problem-and-solution">Problem and Solution</h2>

<blockquote>
  <p>Given the following multiples of \(\pi\), each truncated to four decimal places:</p>

  <p>\(0\pi = 0.0000, 1\pi = 3.1415, 2\pi = 6.2831, … 1001\pi = 3144.7342 \)</p>

  <p>Use the pigeonhole principle to find a good rational approximation to \(\pi\).</p>
</blockquote>

<p>If we are given the multiples \(0 \pi \) through \( 1000 \pi \), we have 1001 multiples of \(0 \pi \). Consider the first three digits to the right of the decimal place of a number (in 123.456, the digits 456).</p>

<p>There are only 1000 possibilities for the first three digits to the right of the decimal place. Given 1001 multiples of \(\pi \), we can conclude from the pigeonhole principle that two such multiples must have the same three digits. This means that the difference to the right of the decimal point them is less than 0.001 in absolute value (for example, \(0.1235 - 0.1230 = 0.005\)).</p>

<p>Let \(m \pi, n \pi, m &gt; n \) be two multiples sharing the three numbers to the right of the decimal place. Then:</p>

<script type="math/tex; mode=display"> m\pi - n\pi = (m - n) \pi \implies \pi = \frac{m \pi - n \pi}{m - n} </script>

<p>Because \( m\pi - n\pi \) has a difference to the right of the decimal place that is less than 0.001, it approximates some integer. Therefore, we can use \( \frac{m \pi - n \pi}{m - n} \) as a rational approximation of \pi.</p>

<h2 id="code">Code</h2>

<p>For 11 multiples of \( \pi \), the problem is trivial to do by hand. For 1001 multiples, I’ve written a Python script to solve the problem. You can play around with the code <a href="http://codepad.org/HCmovMEd">here</a>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="sd">&quot;&quot;&quot;</span>
</span><span class="line"><span class="sd">pi.py</span>
</span><span class="line"><span class="sd">Calculates an approximation of pi given the multiples 0pi - 1000pi using</span>
</span><span class="line"><span class="sd">the Pigeonhole Principle. Outputs the first approximation found.</span>
</span><span class="line">
</span><span class="line"><span class="sd">Author: Louis Li</span>
</span><span class="line"><span class="sd">&quot;&quot;&quot;</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="nn">math</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class="line">    <span class="c"># Store the decimals we&#39;ve found in a dictionary with its multiple of pi</span>
</span><span class="line">    <span class="n">d</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1001</span><span class="p">):</span>
</span><span class="line">        <span class="n">n_pi</span> <span class="o">=</span> <span class="n">n</span> <span class="o">*</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span>
</span><span class="line">
</span><span class="line">        <span class="n">first_three_dec</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">floor</span><span class="p">((</span><span class="n">n_pi</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">)</span> <span class="o">%</span> <span class="mi">1000</span><span class="p">))</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="ow">not</span> <span class="n">first_three_dec</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span>
</span><span class="line">            <span class="n">d</span><span class="p">[</span><span class="n">first_three_dec</span><span class="p">]</span> <span class="o">=</span> <span class="n">n</span>
</span><span class="line">        <span class="k">else</span><span class="p">:</span>
</span><span class="line">            <span class="c"># Calculate an approximation, having found two numbers</span>
</span><span class="line">            <span class="c"># with the same first three decimal places</span>
</span><span class="line">            <span class="n">m</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">first_three_dec</span><span class="p">]</span>
</span><span class="line">            <span class="n">m_pi</span> <span class="o">=</span> <span class="n">m</span> <span class="o">*</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span>
</span><span class="line">
</span><span class="line">            <span class="k">print</span> <span class="nb">int</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">n_pi</span> <span class="o">-</span> <span class="n">m_pi</span><span class="p">))</span>
</span><span class="line">            <span class="k">print</span> <span class="s">&quot;----- = &quot;</span><span class="p">,</span> <span class="p">((</span><span class="n">n_pi</span> <span class="o">-</span> <span class="n">m_pi</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="n">m</span><span class="p">)),</span> \
</span><span class="line">                <span class="s">&quot;(m = </span><span class="si">%d</span><span class="s">, n = </span><span class="si">%d</span><span class="s">)&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
</span><span class="line">            <span class="k">print</span> <span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="n">m</span><span class="p">)</span>
</span><span class="line">            <span class="k">print</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">Actual value, pi: &quot;</span><span class="p">,</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span>
</span><span class="line">            <span class="k">break</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class="line">    <span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This will output the first solution found:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">355
</span><span class="line">----- =  3.14159265359 (m = 1, n = 114)
</span><span class="line">113
</span><span class="line">
</span><span class="line">Actual value, pi:  3.14159265359</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome Extensions: Taking Screenshots with Javascript/jQuery, HTML5, Canvas]]></title>
    <link href="http://louisrli.github.io/blog/2013/01/16/javascript-canvas-screenshot/"/>
    <updated>2013-01-16T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2013/01/16/javascript-canvas-screenshot</id>
    <content type="html"><![CDATA[<p>This post describes how to create a completely accurate image preview of a DOM element on the page by using Javascript in a Chrome extension. I stumbled upon this issue while working on a web implementation of <a href="http://www.mendeley.com/research/enhanced-area-cursors-reducing-fine-pointing-demands-people-motor-impairments/">click-and-cross (Findlater et al.)</a> for research. This process consists of two subproblems.</p>

<ol>
  <li>How can we take a screenshot of the current page using Javascript?</li>
  <li>Given the screenshot of part of the page, how can we crop out our element from the screenshot?</li>
</ol>

<!-- more -->

<p>If you’re only interested in the code and not the explanation of the problem, <a href="#code">click here</a>.</p>

<h2 id="overview">Overview</h2>

<h3 id="the-screenshot-problem-imperfect-solutions">The screenshot problem: imperfect solutions</h3>

<p>Given only plain Javascript and a DOM, outside of the context of a Chrome extension it’s not possible to take a completely accurate screenshot of the page. This is explained in a <a href="http://stackoverflow.com/questions/4912092/using-html5-canvas-javascript-to-take-screenshots/">Stack Overflow question</a>.</p>

<p>The top answer offers a solution that uses a script called <a href="http://html2canvas.hertzen.com/">html2canvas</a>. Another potential solution is <a href="http://www.aplweb.co.uk/blog/js/magnifying-glass/">Magnifying Glass</a>, which works by duplicating the HTML content of the body and re-rendering it in a “magnifying glass” (<a href="http://www.aplweb.co.uk/blog/js/magnifying-glass/demo.html">demo</a>). However, Magnifying Glass will conflict with any HTML-embedded Javascript, and html2canvas produces an imperfect replication of the page.</p>

<p>The solution in this post is dependent on the fact that the Chrome extension API provides a function, <code>chrome.tabs.captureVisibleTab()</code> <a href="http://developer.chrome.com/extensions/tabs.html#method-captureVisibleTab">(docs)</a>, for taking a screenshot of the visible part of a tab.</p>

<h3 id="picking-out-the-element-from-the-screenshot">Picking out the element from the screenshot</h3>

<p>Since the <code>captureVisibleTab()</code> function only gives us a portion of the screen, we can’t simply use the offset (top, left) of the rendered element.</p>

<p>For example, in the figure below, let the shaded part of the screen be the part of the screen that we capture, and the <strong>Message Passing</strong> header, boxed in yellow, be the element that we want to capture. Given the position of the screenshot relative to the origin of the window (the black dots), we’ll compute the position of our element relative to the origin of the screenshot (the blue dots), then crop out that region.</p>

<ul class="thumbnails" style="text-align: center;">
    <li class="span6" style="display:inline-block; float: none;">
    <a href="http://louisrli.github.io/images/chrome-screenshot-demo.png" class="thumbnail">
        <img src="http://louisrli.github.io/images/chrome-screenshot-demo.png" alt="Diagram of the element that we want to capture relative to the screenshot" />
    </a>
    </li>
</ul>

<h2 id="code">Code</h2>

<p>Chrome extensions have two distinct parts involving Javascript: the extension (runs in the background) and the content scripts (runs on a certain page and can access the DOM). Content scripts <em>cannot</em> access most of the Chrome extension API (such as <code>captureVisibleTab()</code>), but extensions and content scripts can communicate indirectly through <a href="http://developer.chrome.com/extensions/messaging.html">message passing</a>.</p>

<p>Make sure that these permissions are included in your <code>manifest.json</code>, and add the functions to one of your content scripts.</p>

<div class="highlight"><pre><code class="language-text" data-lang="text">&quot;permissions&quot;: [&quot;tabs&quot;, &quot;&lt;all_urls&gt;&quot;],
&quot;background&quot;: {
    &quot;scripts&quot;: [&quot;background.js&quot;]
},</code></pre></div>

<p><code>background.js</code>:</p>

<div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">chrome</span><span class="p">.</span><span class="nx">extension</span><span class="p">.</span><span class="nx">onMessage</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">sender</span><span class="p">,</span> <span class="nx">sendResponse</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">name</span> <span class="o">==</span> <span class="s1">&#39;screenshot&#39;</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">chrome</span><span class="p">.</span><span class="nx">tabs</span><span class="p">.</span><span class="nx">captureVisibleTab</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">dataUrl</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">sendResponse</span><span class="p">({</span> <span class="nx">screenshotUrl</span><span class="o">:</span> <span class="nx">dataUrl</span> <span class="p">});</span>
        <span class="p">});</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">});</span></code></pre></div>

<p><code>screenshot.js</code> (content script):</p>

<div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="cm">/* Takes a screenshot and uses it in a callback as a canvas */</span>
<span class="nx">takeScreenshot</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">chrome</span><span class="p">.</span><span class="nx">extension</span><span class="p">.</span><span class="nx">sendMessage</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;screenshot&#39;</span><span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">screenshotUrl</span><span class="p">;</span>
        <span class="kd">var</span> <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;canvas&#39;</span><span class="p">);</span>
        <span class="kd">var</span> <span class="nx">img</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Image</span><span class="p">();</span>
        <span class="nx">img</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">width</span><span class="p">();</span>
            <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">height</span><span class="p">()</span>
            <span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">).</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">img</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span>

            <span class="kd">var</span> <span class="nx">$canvas</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">canvas</span><span class="p">);</span>
            <span class="nx">$canvas</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;scrollLeft&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">).</span><span class="nx">scrollLeft</span><span class="p">());</span>
            <span class="nx">$canvas</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;scrollTop&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">).</span><span class="nx">scrollTop</span><span class="p">());</span>

            <span class="c1">// Perform callback after image loads</span>
            <span class="nx">callback</span><span class="p">(</span><span class="nx">$canvas</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="nx">img</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
    <span class="p">});</span>
<span class="p">}</span></code></pre></div>

<div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="cm">/* Returns a canvas containing a screenshot of $element */</span>
<span class="nx">renderPreview</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$element</span><span class="p">,</span> <span class="nx">$screenshotCanvas</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">previewCanvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;canvas&#39;</span><span class="p">);</span>
    <span class="nx">previewCanvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="nx">$element</span><span class="p">.</span><span class="nx">width</span><span class="p">();</span>
    <span class="nx">previewCanvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">=</span> <span class="nx">$element</span><span class="p">.</span><span class="nx">height</span><span class="p">();</span>

    <span class="c1">// Calculate the correct position of the element on the canvas</span>
    <span class="kd">var</span> <span class="nx">prevTop</span> <span class="o">=</span> <span class="nx">$element</span><span class="p">.</span><span class="nx">offset</span><span class="p">().</span><span class="nx">top</span> <span class="o">-</span> <span class="nx">$screenshotCanvas</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;scrollTop&#39;</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">prevLeft</span> <span class="o">=</span> <span class="nx">$element</span><span class="p">.</span><span class="nx">offset</span><span class="p">().</span><span class="nx">left</span> <span class="o">-</span> <span class="nx">$screenshotCanvas</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;scrollLeft&#39;</span><span class="p">);</span>

    <span class="kd">var</span> <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">previewCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span>
    <span class="nx">ctx</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">$screenshotCanvas</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nx">prevLeft</span><span class="p">,</span> <span class="nx">prevTop</span><span class="p">,</span>
                                        <span class="nx">$element</span><span class="p">.</span><span class="nx">width</span><span class="p">(),</span> <span class="nx">$element</span><span class="p">.</span><span class="nx">height</span><span class="p">(),</span>
                                        <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
                                        <span class="nx">$element</span><span class="p">.</span><span class="nx">width</span><span class="p">(),</span> <span class="nx">$element</span><span class="p">.</span><span class="nx">height</span><span class="p">());</span>

    <span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">previewCanvas</span><span class="p">)</span>
                <span class="p">.</span><span class="nx">css</span><span class="p">({</span> <span class="nx">border</span><span class="o">:</span><span class="s1">&#39;1px solid black&#39;</span> <span class="p">});</span>
<span class="p">}</span></code></pre></div>

<p>We do three things:</p>

<ol>
  <li>Use the extension to capture a screenshot of the open tab, receiving a <code>data://</code> URL to the image and sending it to the content script.</li>
  <li>In the content script, scale down the screenshot by drawing it to a canvas. The original image may be higher resolution than the actual window, so it needs to be scaled.</li>
  <li>Crop out the portion of the screenshot canvas that we need onto another canvas, now containing our element.</li>
</ol>

<p>We add a listener in the background script of the extension. When a screenshot is requested, it will take a screenshot and send back the <code>data://</code> URL.</p>

<p>Our content script will take two functions. One takes a screenshot of the page, and it accepts a callback argument after the screenshot has finished. When the screenshot is taken, we encode the current position of the window using jQuery’s <code>scrollLeft()</code> and <code>scrollTop()</code>.</p>

<p>Our second function takes a jQuery element and returns a jQuery object referring to a canvas with the preview of that element. It computes the position of the element on the canvas. We use the version of <code>drawImage()</code> <a href="https://developer.mozilla.org/en-US/docs/HTML/Canvas/Tutorial/Using_images#Slicing">(docs)</a> with the most parameters.</p>

<p>If this helped, feel free to leave and comment and let me know.</p>

<h2 id="finished-product">Finished product</h2>

<p>It’s up to you what you want to use the screenshots of the elements for, but here’s an example of what the screenshots would look like in click-and-cross:</p>

<ul class="thumbnails" style="text-align: center;">
    <li class="span3" style="display:inline-block; float: none;">
    <a href="http://louisrli.github.io/images/chrome-nyt-plain.png" class="thumbnail">
        <img src="http://louisrli.github.io/images/chrome-nyt-plain.png" alt="Diagram of the element that we want to capture relative to the screenshot" />
    </a>
    <div>A page with multiple links</div>
    </li>
    <li class="span3" style="display:inline-block; float: none;">
    <a href="http://louisrli.github.io/images/chrome-nyt-cnx.png" class="thumbnail">
        <img src="http://louisrli.github.io/images/chrome-nyt-cnx.png" alt="Diagram of the element that we want to capture relative to the screenshot" />
    </a>
    <div>Previews of nearby elements</div>
    </li>

</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Quicksilver Mac and AppleScript to Adjust System Volume]]></title>
    <link href="http://louisrli.github.io/blog/2013/01/15/applescript-volume/"/>
    <updated>2013-01-15T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2013/01/15/applescript-volume</id>
    <content type="html"><![CDATA[<p>I’ve been using <a href="http://qsapp.com/">Quicksilver</a> for a while, and I’d heard of how powerful but never taken advantage of it. I wanted to adjust the system volume through Quicksilver: right now, I have to use <code>fn</code> + <code>f10</code> / <code>f11</code> / <code>f12</code> to adjust volume, since I chose to have <code>f1</code>-<code>f12</code> map to the normal keys.</p>

<p>It seems that there’s actually no Quicksilver plugin for system volume – only iTunes volume – but it’s pretty simple to do with AppleScripts. It’s not documented everywhere, so I thought I’d add it here.</p>

<!-- more -->

<ul class="thumbnails" style="width: 50%; margin: 0px auto;">
<li class="span4">
<a href="http://louisrli.github.io/images/quicksilver-script.png" class="thumbnail">
<img alt="Quicksilver script for increasing volume" src="http://louisrli.github.io/images/quicksilver-script.png" height="300" />
</a>
</li>
</ul>

<h2 id="volume-applescripts">Volume AppleScripts</h2>

<p>The AppleScripts below will adjust the system volume, which is measured on a scale of 0 - 100. Here’s a <a href="https://www.dropbox.com/s/8a3rzqtiyupmny1/volume-applescripts.zip">download link</a> for these three scripts. To use them in Quicksilver, add them to the catalog, and opening them in Quicksilver should run them by default.</p>

<h5 id="decrease-volume">Decrease volume</h5>

<div class="highlight"><pre><code class="language-applescript" data-lang="applescript"><span class="c"># Decrease\ Volume.scpt</span>
<span class="k">set</span> <span class="nv">currentVolume</span> <span class="k">to</span> <span class="nv">output</span> <span class="na">volume</span> <span class="k">of</span> <span class="p">(</span><span class="nb">get volume settings</span><span class="p">)</span>
<span class="nb">set volume</span> <span class="nv">output</span> <span class="na">volume</span> <span class="p">(</span><span class="nv">currentVolume</span> <span class="o">-</span> <span class="mi">10</span><span class="p">)</span></code></pre></div>

<h5 id="increase-volume">Increase volume</h5>

<div class="highlight"><pre><code class="language-applescript" data-lang="applescript"><span class="c"># Increase\ Volume.scpt</span>
<span class="k">set</span> <span class="nv">currentVolume</span> <span class="k">to</span> <span class="nv">output</span> <span class="na">volume</span> <span class="k">of</span> <span class="p">(</span><span class="nb">get volume settings</span><span class="p">)</span>
<span class="nb">set volume</span> <span class="nv">output</span> <span class="na">volume</span> <span class="p">(</span><span class="nv">currentVolume</span> <span class="o">+</span> <span class="mi">10</span><span class="p">)</span></code></pre></div>

<h5 id="mute-volume">Mute volume</h5>

<div class="highlight"><pre><code class="language-applescript" data-lang="applescript"><span class="c"># Mute\ Volume.scpt</span>
<span class="k">set</span> <span class="nv">isMuted</span> <span class="k">to</span> <span class="nv">output</span> <span class="na">muted</span> <span class="k">of</span> <span class="p">(</span><span class="nb">get volume settings</span><span class="p">)</span>
<span class="nb">set volume</span> <span class="nv">output</span> <span class="na">muted</span> <span class="ow">not</span> <span class="nv">isMuted</span></code></pre></div>

<h2 id="using-in-command-line">Using in command line</h2>

<p>To run an AppleScript file in the command line, run:</p>

<div class="highlight"><pre><code class="language-console" data-lang="console"><span class="gp">$</span> osascript /path/to/file</code></pre></div>

<p>These files have spaces in them so that it looks cleaner in Quicksilver, but you can alias the commands appropriately.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012 in Sideprojects]]></title>
    <link href="http://louisrli.github.io/blog/2013/01/12/sideprojects-2012/"/>
    <updated>2013-01-12T00:00:00+01:00</updated>
    <id>http://louisrli.github.io/blog/2013/01/12/sideprojects-2012</id>
    <content type="html"><![CDATA[<p>It always surprises me how long a year is. It’s hard for me to believe that some of these projects were a year ago, but I’m happy to see my progress. Here’s a walk down memory lane for my projects in 2012, not including course projects and research.</p>

<p><a id="exploits" style="visibility:hidden;"> </a></p>

<h3 id="exploit-exercises-protostar-nebula">Exploit Exercises: Protostar, Nebula</h3>

<dl>
  <dt>Description</dt>
  <dd>A series of security wargames from <a href="http://exploit-exercises.com">Exploit Exercises</a>.</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>shell, C, assembly and shellcode, command line tools, compilation and libraries</dd>
  <dt>Other</dt>
  <dd>These were both fun and educational. These problems required a good deal of persistence. Topics ranged from: buffer overflows, shell code, stack layout, library linking, race conditions, format strings, command line tools, networking. I’ve posted the solutions on this site for the format string, stack, and shell exploit sections.</dd>
  <dt>Links</dt>
  <dd><a href="http://louisrli.github.com/sideprojects/2012/06/22/nebula0">Nebula shell solutions: part 1</a>, <a href="http://louisrli.github.com/sideprojects/2012/08/18/protostar-stack0">Protostar stack solutions: part 1</a>, <a href="http://louisrli.github.com/sideprojects/2012/08/29/protostar-format0">Protostar format solutions</a></dd>
</dl>

<!-- more -->
<p><a id="euler" style="visibility:hidden;"> </a></p>

<h3 id="project-euler">Project Euler</h3>
<dl>
  <dt>Description</dt>
  <dd>A series of mathematical programming problems from <a href="http://projecteuler.net/">Project Euler</a>.</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>C++, Scala</dd>
  <dt>Other</dt>
  <dd>Over the winter break of my freshman year (January 2012), I worked on these in C++. I’ll admit that I’m a bit embarrassed of the code I wrote – C++ isn’t the greatest language to use to work on these problems. However, Project Euler is a great way to become familiar with a language. The problems become significantly harder, and I continued with Scala (June 2012 - August 2012).</dd>
  <dt>Links</dt>
  <dd><a href="https://github.com/louisrli/project-euler">code solutions</a></dd>
</dl>

<p><a id="grabrc" style="visibility:hidden;"> </a></p>

<h3 id="grabrc">.grabrc</h3>
<dl>
  <dt>Description</dt>
  <dd>A command-line client for downloading dotfiles from Github, giving a comfortable editing environment from any terminal. It can be installed via <a href="http://www.pip-installer.org/en/latest/">pip</a> (<code>pip install grabrc-client</code>).</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>Python (client), Scala Play Framework (server)</dd>
  <dt>Other</dt>
  <dd>This was a pretty significant endeavor over the summer. The idea was motivated by my work with Amazon EC2 machines, virtual machines, and random in-house servers. Many times, I had to do work while ssh’d to those machines, but it was less productive without my comfortable shell and emacs environment at hand. sftp’ing files is a bit tedious, so I wrote a client (command-line Python) and a server (RESTful API) for accessing my dotfiles. The server is currently hosted on Heroku. I do, in fact, eat my own dog food, and it’s very handy when setting up new computers.</dd>
  <dt>Links</dt>
  <dd><a href="https://github.com/louisrli/grabrc-server">server source code</a>, <a href="https://github.com/louisrli/grabrc-client">client source code</a>, <a href="http://pypi.python.org/pypi/grabrc-client/">PyPI index</a></dd>
</dl>

<p><a id="shuttleboy" style="visibility:hidden;"> </a></p>

<h3 id="shuttleboy-ios">Shuttleboy iOS</h3>
<dl>
  <dt>Description</dt>
  <dd>A native iOS version of the Harvard shuttle tracker, <a href="http://shuttleboy.cs50.net/">Shuttleboy</a>.</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>Objective-C, Cocoa Touch</dd>
  <dt>Other</dt>
  <dd>I worked on this for a few weeks during the winter break of my freshman year (January 2012). I didn’t want to pay for Apple Developer membership on my own, but after a long wait, I’m planning to release it through Rover soon.</dd>
  <dt>Links</dt>
  <dd><a href="http://louisrli.github.io/images/shuttleboy-preview.png">screenshots</a></dd>
</dl>

<p><a id="shuttlebaby" style="visibility:hidden;"> </a></p>

<h3 id="shuttlebabyhttpwwwhcsharvardedulouisshuttlebaby"><a href="http://www.hcs.harvard.edu/~louis/shuttlebaby/">Shuttlebaby</a></h3>
<dl>
  <dt>Description</dt>
  <dd>A website with the next few times between two particular stops on <a href="http://shuttleboy.cs50.net/">Shuttleboy</a>. Can be forked and customized.</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>PHP, HTML, CSS</dd>
  <dt>Links</dt>
  <dd><a href="http://www.hcs.harvard.edu/~louis/shuttlebaby/">site</a>, <a href="https://github.com/louisrli/shuttlebaby">source code</a></dd>
</dl>

<p><a id="hungry" style="visibility:hidden;"> </a></p>

<h3 id="hungryhttpwwwhcsharvardedulouishungry"><a href="http://www.hcs.harvard.edu/~louis/hungry/">Hungry</a></h3>
<dl>
  <dt>Description</dt>
  <dd>A website with an obnoxiously concise version of the Harvard dining menu, showing only entrees. Includes an option to sign up and receive daily emails.</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>PHP, HTML, CSS</dd>
  <dt>Links</dt>
  <dd><a href="http://www.hcs.harvard.edu/~louis/hungry/">site</a>, <a href="https://github.com/louisrli/hungry">source code</a></dd>
</dl>

<h3 id="jenkins-arbitrary-parameters-plugin">Jenkins Arbitrary Parameters Plugin</h3>
<dl>
  <dt>Description</dt>
  <dd>A plugin for the open-source continuous integration tool [Jenkins] that allows an arbitrary number of string parameters to be passed in as key-value pairs in properties file format.</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>Java, Jenkins</dd>
  <dt>Other</dt>
  <dd>Over the summer, one of my first intern projects was constructing a parameterized test framework in Jenkins that would run jobs along a matrix of parameters: operating system, MySQL version, log4cpp version, Java version, etc. Along with some work on the ec2-plugin, this was my first time looking at such a huge codebase. After poking around the Javadocs and Confluence wiki for a substantial amount of time, I wrote this plugin.</dd>
  <dt>Links</dt>
  <dd><a href="https://github.com/louisrli/arbitrary-parameters-plugin">source code</a></dd>
</dl>

<p><a id="louisrligithub" style="visibility:hidden;"> </a></p>

<h3 id="louisrligithubcomhttplouisrligithubcom"><a href="http://louisrli.github.com">louisrli.github.com</a></h3>
<dl>
  <dt>Description</dt>
  <dd>This site.</dd>
  <dt>Languages &amp; Tools</dt>
  <dd>Customized Twitter Bootstrap (HTML/CSS/Javascript), Jekyll, Markdown</dd>
  <dt>Links</dt>
  <dd><a href="https://github.com/louisrli/louisrli.github.com">source code</a>, <a href="http://louisrli.github.com/">site</a></dd>
</dl>
]]></content>
  </entry>
  
</feed>
